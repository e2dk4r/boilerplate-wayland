!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	access	/Access (or export) of class members/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	inherits	/Inheritance information/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	signature	/Signature of routine (e.g. prototype or parameter list)/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/tmp/project/boilerplate-wayland/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
CONTENT_TYPE_V1_CLIENT_PROTOCOL_H	build/protocol/content-type-v1-client-protocol.h	/^#define CONTENT_TYPE_V1_CLIENT_PROTOCOL_H$/;"	d
PRESENTATION_TIME_CLIENT_PROTOCOL_H	build/protocol/presentation-time-client-protocol.h	/^#define PRESENTATION_TIME_CLIENT_PROTOCOL_H$/;"	d
VIEWPORTER_CLIENT_PROTOCOL_H	build/protocol/viewporter-client-protocol.h	/^#define VIEWPORTER_CLIENT_PROTOCOL_H$/;"	d
WAYLAND_CLIENT_CORE_H	/usr/include/wayland-client-core.h	/^#define WAYLAND_CLIENT_CORE_H$/;"	d
WAYLAND_CLIENT_PROTOCOL_H	/usr/include/wayland-client-protocol.h	/^#define WAYLAND_CLIENT_PROTOCOL_H$/;"	d
WL_BUFFER_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_BUFFER_DESTROY /;"	d
WL_BUFFER_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_BUFFER_DESTROY_SINCE_VERSION /;"	d
WL_BUFFER_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_BUFFER_INTERFACE$/;"	d
WL_BUFFER_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_BUFFER_RELEASE_SINCE_VERSION /;"	d
WL_CALLBACK_DONE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_CALLBACK_DONE_SINCE_VERSION /;"	d
WL_CALLBACK_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_CALLBACK_INTERFACE$/;"	d
WL_COMPOSITOR_CREATE_REGION	/usr/include/wayland-client-protocol.h	/^#define WL_COMPOSITOR_CREATE_REGION /;"	d
WL_COMPOSITOR_CREATE_REGION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_COMPOSITOR_CREATE_REGION_SINCE_VERSION /;"	d
WL_COMPOSITOR_CREATE_SURFACE	/usr/include/wayland-client-protocol.h	/^#define WL_COMPOSITOR_CREATE_SURFACE /;"	d
WL_COMPOSITOR_CREATE_SURFACE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_COMPOSITOR_CREATE_SURFACE_SINCE_VERSION /;"	d
WL_COMPOSITOR_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_COMPOSITOR_INTERFACE$/;"	d
WL_DATA_DEVICE_DATA_OFFER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_DATA_OFFER_SINCE_VERSION /;"	d
WL_DATA_DEVICE_DROP_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_DROP_SINCE_VERSION /;"	d
WL_DATA_DEVICE_ENTER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_ENTER_SINCE_VERSION /;"	d
WL_DATA_DEVICE_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_ERROR_ENUM$/;"	d
WL_DATA_DEVICE_ERROR_ROLE	/usr/include/wayland-client-protocol.h	/^	WL_DATA_DEVICE_ERROR_ROLE = 0,$/;"	e	enum:wl_data_device_error	access:public
WL_DATA_DEVICE_ERROR_USED_SOURCE	/usr/include/wayland-client-protocol.h	/^	WL_DATA_DEVICE_ERROR_USED_SOURCE = 1,$/;"	e	enum:wl_data_device_error	access:public
WL_DATA_DEVICE_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_INTERFACE$/;"	d
WL_DATA_DEVICE_LEAVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_LEAVE_SINCE_VERSION /;"	d
WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE /;"	d
WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE_SINCE_VERSION /;"	d
WL_DATA_DEVICE_MANAGER_DND_ACTION_ASK	/usr/include/wayland-client-protocol.h	/^	WL_DATA_DEVICE_MANAGER_DND_ACTION_ASK = 4,$/;"	e	enum:wl_data_device_manager_dnd_action	access:public
WL_DATA_DEVICE_MANAGER_DND_ACTION_COPY	/usr/include/wayland-client-protocol.h	/^	WL_DATA_DEVICE_MANAGER_DND_ACTION_COPY = 1,$/;"	e	enum:wl_data_device_manager_dnd_action	access:public
WL_DATA_DEVICE_MANAGER_DND_ACTION_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MANAGER_DND_ACTION_ENUM$/;"	d
WL_DATA_DEVICE_MANAGER_DND_ACTION_MOVE	/usr/include/wayland-client-protocol.h	/^	WL_DATA_DEVICE_MANAGER_DND_ACTION_MOVE = 2,$/;"	e	enum:wl_data_device_manager_dnd_action	access:public
WL_DATA_DEVICE_MANAGER_DND_ACTION_NONE	/usr/include/wayland-client-protocol.h	/^	WL_DATA_DEVICE_MANAGER_DND_ACTION_NONE = 0,$/;"	e	enum:wl_data_device_manager_dnd_action	access:public
WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE /;"	d
WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE_SINCE_VERSION /;"	d
WL_DATA_DEVICE_MANAGER_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MANAGER_INTERFACE$/;"	d
WL_DATA_DEVICE_MOTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_MOTION_SINCE_VERSION /;"	d
WL_DATA_DEVICE_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_RELEASE /;"	d
WL_DATA_DEVICE_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_RELEASE_SINCE_VERSION /;"	d
WL_DATA_DEVICE_SELECTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_SELECTION_SINCE_VERSION /;"	d
WL_DATA_DEVICE_SET_SELECTION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_SET_SELECTION /;"	d
WL_DATA_DEVICE_SET_SELECTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_SET_SELECTION_SINCE_VERSION /;"	d
WL_DATA_DEVICE_START_DRAG	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_START_DRAG /;"	d
WL_DATA_DEVICE_START_DRAG_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_DEVICE_START_DRAG_SINCE_VERSION /;"	d
WL_DATA_OFFER_ACCEPT	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_ACCEPT /;"	d
WL_DATA_OFFER_ACCEPT_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_ACCEPT_SINCE_VERSION /;"	d
WL_DATA_OFFER_ACTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_ACTION_SINCE_VERSION /;"	d
WL_DATA_OFFER_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_DESTROY /;"	d
WL_DATA_OFFER_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_DESTROY_SINCE_VERSION /;"	d
WL_DATA_OFFER_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_ERROR_ENUM$/;"	d
WL_DATA_OFFER_ERROR_INVALID_ACTION	/usr/include/wayland-client-protocol.h	/^	WL_DATA_OFFER_ERROR_INVALID_ACTION = 2,$/;"	e	enum:wl_data_offer_error	access:public
WL_DATA_OFFER_ERROR_INVALID_ACTION_MASK	/usr/include/wayland-client-protocol.h	/^	WL_DATA_OFFER_ERROR_INVALID_ACTION_MASK = 1,$/;"	e	enum:wl_data_offer_error	access:public
WL_DATA_OFFER_ERROR_INVALID_FINISH	/usr/include/wayland-client-protocol.h	/^	WL_DATA_OFFER_ERROR_INVALID_FINISH = 0,$/;"	e	enum:wl_data_offer_error	access:public
WL_DATA_OFFER_ERROR_INVALID_OFFER	/usr/include/wayland-client-protocol.h	/^	WL_DATA_OFFER_ERROR_INVALID_OFFER = 3,$/;"	e	enum:wl_data_offer_error	access:public
WL_DATA_OFFER_FINISH	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_FINISH /;"	d
WL_DATA_OFFER_FINISH_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_FINISH_SINCE_VERSION /;"	d
WL_DATA_OFFER_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_INTERFACE$/;"	d
WL_DATA_OFFER_OFFER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_OFFER_SINCE_VERSION /;"	d
WL_DATA_OFFER_RECEIVE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_RECEIVE /;"	d
WL_DATA_OFFER_RECEIVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_RECEIVE_SINCE_VERSION /;"	d
WL_DATA_OFFER_SET_ACTIONS	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_SET_ACTIONS /;"	d
WL_DATA_OFFER_SET_ACTIONS_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_SET_ACTIONS_SINCE_VERSION /;"	d
WL_DATA_OFFER_SOURCE_ACTIONS_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_OFFER_SOURCE_ACTIONS_SINCE_VERSION /;"	d
WL_DATA_SOURCE_ACTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_ACTION_SINCE_VERSION /;"	d
WL_DATA_SOURCE_CANCELLED_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_CANCELLED_SINCE_VERSION /;"	d
WL_DATA_SOURCE_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_DESTROY /;"	d
WL_DATA_SOURCE_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_DESTROY_SINCE_VERSION /;"	d
WL_DATA_SOURCE_DND_DROP_PERFORMED_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_DND_DROP_PERFORMED_SINCE_VERSION /;"	d
WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION /;"	d
WL_DATA_SOURCE_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_ERROR_ENUM$/;"	d
WL_DATA_SOURCE_ERROR_INVALID_ACTION_MASK	/usr/include/wayland-client-protocol.h	/^	WL_DATA_SOURCE_ERROR_INVALID_ACTION_MASK = 0,$/;"	e	enum:wl_data_source_error	access:public
WL_DATA_SOURCE_ERROR_INVALID_SOURCE	/usr/include/wayland-client-protocol.h	/^	WL_DATA_SOURCE_ERROR_INVALID_SOURCE = 1,$/;"	e	enum:wl_data_source_error	access:public
WL_DATA_SOURCE_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_INTERFACE$/;"	d
WL_DATA_SOURCE_OFFER	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_OFFER /;"	d
WL_DATA_SOURCE_OFFER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_OFFER_SINCE_VERSION /;"	d
WL_DATA_SOURCE_SEND_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_SEND_SINCE_VERSION /;"	d
WL_DATA_SOURCE_SET_ACTIONS	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_SET_ACTIONS /;"	d
WL_DATA_SOURCE_SET_ACTIONS_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_SET_ACTIONS_SINCE_VERSION /;"	d
WL_DATA_SOURCE_TARGET_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DATA_SOURCE_TARGET_SINCE_VERSION /;"	d
WL_DISPLAY_DELETE_ID_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_DELETE_ID_SINCE_VERSION /;"	d
WL_DISPLAY_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_ERROR_ENUM$/;"	d
WL_DISPLAY_ERROR_IMPLEMENTATION	/usr/include/wayland-client-protocol.h	/^	WL_DISPLAY_ERROR_IMPLEMENTATION = 3,$/;"	e	enum:wl_display_error	access:public
WL_DISPLAY_ERROR_INVALID_METHOD	/usr/include/wayland-client-protocol.h	/^	WL_DISPLAY_ERROR_INVALID_METHOD = 1,$/;"	e	enum:wl_display_error	access:public
WL_DISPLAY_ERROR_INVALID_OBJECT	/usr/include/wayland-client-protocol.h	/^	WL_DISPLAY_ERROR_INVALID_OBJECT = 0,$/;"	e	enum:wl_display_error	access:public
WL_DISPLAY_ERROR_NO_MEMORY	/usr/include/wayland-client-protocol.h	/^	WL_DISPLAY_ERROR_NO_MEMORY = 2,$/;"	e	enum:wl_display_error	access:public
WL_DISPLAY_ERROR_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_ERROR_SINCE_VERSION /;"	d
WL_DISPLAY_GET_REGISTRY	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_GET_REGISTRY /;"	d
WL_DISPLAY_GET_REGISTRY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_GET_REGISTRY_SINCE_VERSION /;"	d
WL_DISPLAY_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_INTERFACE$/;"	d
WL_DISPLAY_SYNC	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_SYNC /;"	d
WL_DISPLAY_SYNC_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_DISPLAY_SYNC_SINCE_VERSION /;"	d
WL_KEYBOARD_ENTER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_ENTER_SINCE_VERSION /;"	d
WL_KEYBOARD_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_INTERFACE$/;"	d
WL_KEYBOARD_KEYMAP_FORMAT_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_KEYMAP_FORMAT_ENUM$/;"	d
WL_KEYBOARD_KEYMAP_FORMAT_NO_KEYMAP	/usr/include/wayland-client-protocol.h	/^	WL_KEYBOARD_KEYMAP_FORMAT_NO_KEYMAP = 0,$/;"	e	enum:wl_keyboard_keymap_format	access:public
WL_KEYBOARD_KEYMAP_FORMAT_XKB_V1	/usr/include/wayland-client-protocol.h	/^	WL_KEYBOARD_KEYMAP_FORMAT_XKB_V1 = 1,$/;"	e	enum:wl_keyboard_keymap_format	access:public
WL_KEYBOARD_KEYMAP_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_KEYMAP_SINCE_VERSION /;"	d
WL_KEYBOARD_KEY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_KEY_SINCE_VERSION /;"	d
WL_KEYBOARD_KEY_STATE_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_KEY_STATE_ENUM$/;"	d
WL_KEYBOARD_KEY_STATE_PRESSED	/usr/include/wayland-client-protocol.h	/^	WL_KEYBOARD_KEY_STATE_PRESSED = 1,$/;"	e	enum:wl_keyboard_key_state	access:public
WL_KEYBOARD_KEY_STATE_RELEASED	/usr/include/wayland-client-protocol.h	/^	WL_KEYBOARD_KEY_STATE_RELEASED = 0,$/;"	e	enum:wl_keyboard_key_state	access:public
WL_KEYBOARD_LEAVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_LEAVE_SINCE_VERSION /;"	d
WL_KEYBOARD_MODIFIERS_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_MODIFIERS_SINCE_VERSION /;"	d
WL_KEYBOARD_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_RELEASE /;"	d
WL_KEYBOARD_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_RELEASE_SINCE_VERSION /;"	d
WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION /;"	d
WL_MARSHAL_FLAG_DESTROY	/usr/include/wayland-client-core.h	/^#define WL_MARSHAL_FLAG_DESTROY /;"	d
WL_OUTPUT_DESCRIPTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_DESCRIPTION_SINCE_VERSION /;"	d
WL_OUTPUT_DONE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_DONE_SINCE_VERSION /;"	d
WL_OUTPUT_GEOMETRY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_GEOMETRY_SINCE_VERSION /;"	d
WL_OUTPUT_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_INTERFACE$/;"	d
WL_OUTPUT_MODE_CURRENT	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_MODE_CURRENT = 0x1,$/;"	e	enum:wl_output_mode	access:public
WL_OUTPUT_MODE_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_MODE_ENUM$/;"	d
WL_OUTPUT_MODE_PREFERRED	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_MODE_PREFERRED = 0x2,$/;"	e	enum:wl_output_mode	access:public
WL_OUTPUT_MODE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_MODE_SINCE_VERSION /;"	d
WL_OUTPUT_NAME_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_NAME_SINCE_VERSION /;"	d
WL_OUTPUT_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_RELEASE /;"	d
WL_OUTPUT_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_RELEASE_SINCE_VERSION /;"	d
WL_OUTPUT_SCALE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_SCALE_SINCE_VERSION /;"	d
WL_OUTPUT_SUBPIXEL_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_SUBPIXEL_ENUM$/;"	d
WL_OUTPUT_SUBPIXEL_HORIZONTAL_BGR	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_SUBPIXEL_HORIZONTAL_BGR = 3,$/;"	e	enum:wl_output_subpixel	access:public
WL_OUTPUT_SUBPIXEL_HORIZONTAL_RGB	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_SUBPIXEL_HORIZONTAL_RGB = 2,$/;"	e	enum:wl_output_subpixel	access:public
WL_OUTPUT_SUBPIXEL_NONE	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_SUBPIXEL_NONE = 1,$/;"	e	enum:wl_output_subpixel	access:public
WL_OUTPUT_SUBPIXEL_UNKNOWN	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_SUBPIXEL_UNKNOWN = 0,$/;"	e	enum:wl_output_subpixel	access:public
WL_OUTPUT_SUBPIXEL_VERTICAL_BGR	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_SUBPIXEL_VERTICAL_BGR = 5,$/;"	e	enum:wl_output_subpixel	access:public
WL_OUTPUT_SUBPIXEL_VERTICAL_RGB	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_SUBPIXEL_VERTICAL_RGB = 4,$/;"	e	enum:wl_output_subpixel	access:public
WL_OUTPUT_TRANSFORM_180	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_180 = 2,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_270	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_270 = 3,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_90	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_90 = 1,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_OUTPUT_TRANSFORM_ENUM$/;"	d
WL_OUTPUT_TRANSFORM_FLIPPED	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_FLIPPED = 4,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_FLIPPED_180	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_FLIPPED_180 = 6,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_FLIPPED_270	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_FLIPPED_270 = 7,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_FLIPPED_90	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_FLIPPED_90 = 5,$/;"	e	enum:wl_output_transform	access:public
WL_OUTPUT_TRANSFORM_NORMAL	/usr/include/wayland-client-protocol.h	/^	WL_OUTPUT_TRANSFORM_NORMAL = 0,$/;"	e	enum:wl_output_transform	access:public
WL_POINTER_AXIS_DISCRETE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_DISCRETE_SINCE_VERSION /;"	d
WL_POINTER_AXIS_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_ENUM$/;"	d
WL_POINTER_AXIS_HORIZONTAL_SCROLL	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_HORIZONTAL_SCROLL = 1,$/;"	e	enum:wl_pointer_axis	access:public
WL_POINTER_AXIS_RELATIVE_DIRECTION_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_RELATIVE_DIRECTION_ENUM$/;"	d
WL_POINTER_AXIS_RELATIVE_DIRECTION_IDENTICAL	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_RELATIVE_DIRECTION_IDENTICAL = 0,$/;"	e	enum:wl_pointer_axis_relative_direction	access:public
WL_POINTER_AXIS_RELATIVE_DIRECTION_INVERTED	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_RELATIVE_DIRECTION_INVERTED = 1,$/;"	e	enum:wl_pointer_axis_relative_direction	access:public
WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION /;"	d
WL_POINTER_AXIS_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_SINCE_VERSION /;"	d
WL_POINTER_AXIS_SOURCE_CONTINUOUS	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_SOURCE_CONTINUOUS = 2,$/;"	e	enum:wl_pointer_axis_source	access:public
WL_POINTER_AXIS_SOURCE_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_SOURCE_ENUM$/;"	d
WL_POINTER_AXIS_SOURCE_FINGER	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_SOURCE_FINGER = 1,$/;"	e	enum:wl_pointer_axis_source	access:public
WL_POINTER_AXIS_SOURCE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_SOURCE_SINCE_VERSION /;"	d
WL_POINTER_AXIS_SOURCE_WHEEL	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_SOURCE_WHEEL = 0,$/;"	e	enum:wl_pointer_axis_source	access:public
WL_POINTER_AXIS_SOURCE_WHEEL_TILT	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_SOURCE_WHEEL_TILT = 3,$/;"	e	enum:wl_pointer_axis_source	access:public
WL_POINTER_AXIS_SOURCE_WHEEL_TILT_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_SOURCE_WHEEL_TILT_SINCE_VERSION /;"	d
WL_POINTER_AXIS_STOP_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_STOP_SINCE_VERSION /;"	d
WL_POINTER_AXIS_VALUE120_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_AXIS_VALUE120_SINCE_VERSION /;"	d
WL_POINTER_AXIS_VERTICAL_SCROLL	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_AXIS_VERTICAL_SCROLL = 0,$/;"	e	enum:wl_pointer_axis	access:public
WL_POINTER_BUTTON_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_BUTTON_SINCE_VERSION /;"	d
WL_POINTER_BUTTON_STATE_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_BUTTON_STATE_ENUM$/;"	d
WL_POINTER_BUTTON_STATE_PRESSED	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_BUTTON_STATE_PRESSED = 1,$/;"	e	enum:wl_pointer_button_state	access:public
WL_POINTER_BUTTON_STATE_RELEASED	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_BUTTON_STATE_RELEASED = 0,$/;"	e	enum:wl_pointer_button_state	access:public
WL_POINTER_ENTER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_ENTER_SINCE_VERSION /;"	d
WL_POINTER_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_ERROR_ENUM$/;"	d
WL_POINTER_ERROR_ROLE	/usr/include/wayland-client-protocol.h	/^	WL_POINTER_ERROR_ROLE = 0,$/;"	e	enum:wl_pointer_error	access:public
WL_POINTER_FRAME_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_FRAME_SINCE_VERSION /;"	d
WL_POINTER_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_INTERFACE$/;"	d
WL_POINTER_LEAVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_LEAVE_SINCE_VERSION /;"	d
WL_POINTER_MOTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_MOTION_SINCE_VERSION /;"	d
WL_POINTER_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_RELEASE /;"	d
WL_POINTER_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_RELEASE_SINCE_VERSION /;"	d
WL_POINTER_SET_CURSOR	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_SET_CURSOR /;"	d
WL_POINTER_SET_CURSOR_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_POINTER_SET_CURSOR_SINCE_VERSION /;"	d
WL_PRIVATE	build/protocol/content-type-v1-protocol.c	/^#define WL_PRIVATE /;"	d	file:
WL_PRIVATE	build/protocol/content-type-v1-protocol.c	/^#define WL_PRIVATE$/;"	d	file:
WL_PRIVATE	build/protocol/presentation-time-protocol.c	/^#define WL_PRIVATE /;"	d	file:
WL_PRIVATE	build/protocol/presentation-time-protocol.c	/^#define WL_PRIVATE$/;"	d	file:
WL_PRIVATE	build/protocol/viewporter-protocol.c	/^#define WL_PRIVATE /;"	d	file:
WL_PRIVATE	build/protocol/viewporter-protocol.c	/^#define WL_PRIVATE$/;"	d	file:
WL_PRIVATE	build/protocol/xdg-shell-protocol.c	/^#define WL_PRIVATE /;"	d	file:
WL_PRIVATE	build/protocol/xdg-shell-protocol.c	/^#define WL_PRIVATE$/;"	d	file:
WL_REGION_ADD	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_ADD /;"	d
WL_REGION_ADD_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_ADD_SINCE_VERSION /;"	d
WL_REGION_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_DESTROY /;"	d
WL_REGION_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_DESTROY_SINCE_VERSION /;"	d
WL_REGION_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_INTERFACE$/;"	d
WL_REGION_SUBTRACT	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_SUBTRACT /;"	d
WL_REGION_SUBTRACT_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_REGION_SUBTRACT_SINCE_VERSION /;"	d
WL_REGISTRY_BIND	/usr/include/wayland-client-protocol.h	/^#define WL_REGISTRY_BIND /;"	d
WL_REGISTRY_BIND_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_REGISTRY_BIND_SINCE_VERSION /;"	d
WL_REGISTRY_GLOBAL_REMOVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_REGISTRY_GLOBAL_REMOVE_SINCE_VERSION /;"	d
WL_REGISTRY_GLOBAL_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_REGISTRY_GLOBAL_SINCE_VERSION /;"	d
WL_REGISTRY_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_REGISTRY_INTERFACE$/;"	d
WL_SEAT_CAPABILITIES_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_CAPABILITIES_SINCE_VERSION /;"	d
WL_SEAT_CAPABILITY_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_CAPABILITY_ENUM$/;"	d
WL_SEAT_CAPABILITY_KEYBOARD	/usr/include/wayland-client-protocol.h	/^	WL_SEAT_CAPABILITY_KEYBOARD = 2,$/;"	e	enum:wl_seat_capability	access:public
WL_SEAT_CAPABILITY_POINTER	/usr/include/wayland-client-protocol.h	/^	WL_SEAT_CAPABILITY_POINTER = 1,$/;"	e	enum:wl_seat_capability	access:public
WL_SEAT_CAPABILITY_TOUCH	/usr/include/wayland-client-protocol.h	/^	WL_SEAT_CAPABILITY_TOUCH = 4,$/;"	e	enum:wl_seat_capability	access:public
WL_SEAT_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_ERROR_ENUM$/;"	d
WL_SEAT_ERROR_MISSING_CAPABILITY	/usr/include/wayland-client-protocol.h	/^	WL_SEAT_ERROR_MISSING_CAPABILITY = 0,$/;"	e	enum:wl_seat_error	access:public
WL_SEAT_GET_KEYBOARD	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_GET_KEYBOARD /;"	d
WL_SEAT_GET_KEYBOARD_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_GET_KEYBOARD_SINCE_VERSION /;"	d
WL_SEAT_GET_POINTER	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_GET_POINTER /;"	d
WL_SEAT_GET_POINTER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_GET_POINTER_SINCE_VERSION /;"	d
WL_SEAT_GET_TOUCH	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_GET_TOUCH /;"	d
WL_SEAT_GET_TOUCH_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_GET_TOUCH_SINCE_VERSION /;"	d
WL_SEAT_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_INTERFACE$/;"	d
WL_SEAT_NAME_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_NAME_SINCE_VERSION /;"	d
WL_SEAT_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_RELEASE /;"	d
WL_SEAT_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SEAT_RELEASE_SINCE_VERSION /;"	d
WL_SHELL_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_ERROR_ENUM$/;"	d
WL_SHELL_ERROR_ROLE	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_ERROR_ROLE = 0,$/;"	e	enum:wl_shell_error	access:public
WL_SHELL_GET_SHELL_SURFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_GET_SHELL_SURFACE /;"	d
WL_SHELL_GET_SHELL_SURFACE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_GET_SHELL_SURFACE_SINCE_VERSION /;"	d
WL_SHELL_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_INTERFACE$/;"	d
WL_SHELL_SURFACE_CONFIGURE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_CONFIGURE_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_FULLSCREEN_METHOD_DEFAULT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_FULLSCREEN_METHOD_DEFAULT = 0,$/;"	e	enum:wl_shell_surface_fullscreen_method	access:public
WL_SHELL_SURFACE_FULLSCREEN_METHOD_DRIVER	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_FULLSCREEN_METHOD_DRIVER = 2,$/;"	e	enum:wl_shell_surface_fullscreen_method	access:public
WL_SHELL_SURFACE_FULLSCREEN_METHOD_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_FULLSCREEN_METHOD_ENUM$/;"	d
WL_SHELL_SURFACE_FULLSCREEN_METHOD_FILL	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_FULLSCREEN_METHOD_FILL = 3,$/;"	e	enum:wl_shell_surface_fullscreen_method	access:public
WL_SHELL_SURFACE_FULLSCREEN_METHOD_SCALE	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_FULLSCREEN_METHOD_SCALE = 1,$/;"	e	enum:wl_shell_surface_fullscreen_method	access:public
WL_SHELL_SURFACE_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_INTERFACE$/;"	d
WL_SHELL_SURFACE_MOVE	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_MOVE /;"	d
WL_SHELL_SURFACE_MOVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_MOVE_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_PING_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_PING_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_PONG	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_PONG /;"	d
WL_SHELL_SURFACE_PONG_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_PONG_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_POPUP_DONE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_POPUP_DONE_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_RESIZE	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_RESIZE /;"	d
WL_SHELL_SURFACE_RESIZE_BOTTOM	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_BOTTOM = 2,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_BOTTOM_LEFT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_BOTTOM_LEFT = 6,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_BOTTOM_RIGHT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_BOTTOM_RIGHT = 10,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_RESIZE_ENUM$/;"	d
WL_SHELL_SURFACE_RESIZE_LEFT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_LEFT = 4,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_NONE	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_NONE = 0,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_RIGHT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_RIGHT = 8,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_RESIZE_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_RESIZE_TOP	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_TOP = 1,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_TOP_LEFT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_TOP_LEFT = 5,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_RESIZE_TOP_RIGHT	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_RESIZE_TOP_RIGHT = 9,$/;"	e	enum:wl_shell_surface_resize	access:public
WL_SHELL_SURFACE_SET_CLASS	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_CLASS /;"	d
WL_SHELL_SURFACE_SET_CLASS_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_CLASS_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_SET_FULLSCREEN	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_FULLSCREEN /;"	d
WL_SHELL_SURFACE_SET_FULLSCREEN_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_FULLSCREEN_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_SET_MAXIMIZED	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_MAXIMIZED /;"	d
WL_SHELL_SURFACE_SET_MAXIMIZED_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_MAXIMIZED_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_SET_POPUP	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_POPUP /;"	d
WL_SHELL_SURFACE_SET_POPUP_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_POPUP_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_SET_TITLE	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_TITLE /;"	d
WL_SHELL_SURFACE_SET_TITLE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_TITLE_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_SET_TOPLEVEL	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_TOPLEVEL /;"	d
WL_SHELL_SURFACE_SET_TOPLEVEL_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_TOPLEVEL_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_SET_TRANSIENT	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_TRANSIENT /;"	d
WL_SHELL_SURFACE_SET_TRANSIENT_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_SET_TRANSIENT_SINCE_VERSION /;"	d
WL_SHELL_SURFACE_TRANSIENT_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SHELL_SURFACE_TRANSIENT_ENUM$/;"	d
WL_SHELL_SURFACE_TRANSIENT_INACTIVE	/usr/include/wayland-client-protocol.h	/^	WL_SHELL_SURFACE_TRANSIENT_INACTIVE = 0x1,$/;"	e	enum:wl_shell_surface_transient	access:public
WL_SHM_CREATE_POOL	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_CREATE_POOL /;"	d
WL_SHM_CREATE_POOL_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_CREATE_POOL_SINCE_VERSION /;"	d
WL_SHM_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_ERROR_ENUM$/;"	d
WL_SHM_ERROR_INVALID_FD	/usr/include/wayland-client-protocol.h	/^	WL_SHM_ERROR_INVALID_FD = 2,$/;"	e	enum:wl_shm_error	access:public
WL_SHM_ERROR_INVALID_FORMAT	/usr/include/wayland-client-protocol.h	/^	WL_SHM_ERROR_INVALID_FORMAT = 0,$/;"	e	enum:wl_shm_error	access:public
WL_SHM_ERROR_INVALID_STRIDE	/usr/include/wayland-client-protocol.h	/^	WL_SHM_ERROR_INVALID_STRIDE = 1,$/;"	e	enum:wl_shm_error	access:public
WL_SHM_FORMAT_ABGR1555	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ABGR1555 = 0x35314241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ABGR16161616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ABGR16161616 = 0x38344241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ABGR16161616F	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ABGR16161616F = 0x48344241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ABGR2101010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ABGR2101010 = 0x30334241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ABGR4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ABGR4444 = 0x32314241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ABGR8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ABGR8888 = 0x34324241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ARGB1555	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ARGB1555 = 0x35315241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ARGB16161616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ARGB16161616 = 0x38345241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ARGB16161616F	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ARGB16161616F = 0x48345241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ARGB2101010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ARGB2101010 = 0x30335241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ARGB4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ARGB4444 = 0x32315241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ARGB8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_ARGB8888 = 0,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_AVUY8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_AVUY8888 = 0x59555641,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_AXBXGXRX106106106106	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_AXBXGXRX106106106106 = 0x30314241,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_AYUV	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_AYUV = 0x56555941,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGR233	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGR233 = 0x38524742,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGR565	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGR565 = 0x36314742,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGR565_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGR565_A8 = 0x38413542,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGR888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGR888 = 0x34324742,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGR888_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGR888_A8 = 0x38413842,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRA1010102	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRA1010102 = 0x30334142,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRA4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRA4444 = 0x32314142,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRA5551	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRA5551 = 0x35314142,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRA8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRA8888 = 0x34324142,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRX1010102	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRX1010102 = 0x30335842,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRX4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRX4444 = 0x32315842,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRX5551	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRX5551 = 0x35315842,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRX8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRX8888 = 0x34325842,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_BGRX8888_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_BGRX8888_A8 = 0x38415842,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_C1	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_C1 = 0x20203143,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_C2	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_C2 = 0x20203243,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_C4	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_C4 = 0x20203443,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_C8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_C8 = 0x20203843,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_D1	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_D1 = 0x20203144,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_D2	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_D2 = 0x20203244,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_D4	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_D4 = 0x20203444,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_D8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_D8 = 0x20203844,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_FORMAT_ENUM$/;"	d
WL_SHM_FORMAT_GR1616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_GR1616 = 0x32335247,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_GR88	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_GR88 = 0x38385247,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV12	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV12 = 0x3231564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV15	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV15 = 0x3531564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV16	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV16 = 0x3631564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV21	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV21 = 0x3132564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV24	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV24 = 0x3432564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV42	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV42 = 0x3234564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_NV61	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_NV61 = 0x3136564e,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_P010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_P010 = 0x30313050,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_P012	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_P012 = 0x32313050,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_P016	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_P016 = 0x36313050,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_P030	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_P030 = 0x30333050,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_P210	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_P210 = 0x30313250,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Q401	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Q401 = 0x31303451,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Q410	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Q410 = 0x30313451,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R1	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R1 = 0x20203152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R10	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R10 = 0x20303152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R12	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R12 = 0x20323152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R16	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R16 = 0x20363152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R2	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R2 = 0x20203252,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R4	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R4 = 0x20203452,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_R8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_R8 = 0x20203852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RG1616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RG1616 = 0x32334752,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RG88	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RG88 = 0x38384752,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGB332	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGB332 = 0x38424752,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGB565	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGB565 = 0x36314752,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGB565_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGB565_A8 = 0x38413552,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGB888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGB888 = 0x34324752,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGB888_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGB888_A8 = 0x38413852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBA1010102	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBA1010102 = 0x30334152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBA4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBA4444 = 0x32314152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBA5551	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBA5551 = 0x35314152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBA8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBA8888 = 0x34324152,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBX1010102	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBX1010102 = 0x30335852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBX4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBX4444 = 0x32315852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBX5551	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBX5551 = 0x35315852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBX8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBX8888 = 0x34325852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_RGBX8888_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_RGBX8888_A8 = 0x38415852,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_FORMAT_SINCE_VERSION /;"	d
WL_SHM_FORMAT_UYVY	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_UYVY = 0x59565955,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_VUY101010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_VUY101010 = 0x30335556,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_VUY888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_VUY888 = 0x34325556,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_VYUY	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_VYUY = 0x59555956,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_X0L0	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_X0L0 = 0x304c3058,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_X0L2	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_X0L2 = 0x324c3058,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR1555	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR1555 = 0x35314258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR16161616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR16161616 = 0x38344258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR16161616F	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR16161616F = 0x48344258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR2101010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR2101010 = 0x30334258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR4444 = 0x32314258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR8888 = 0x34324258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XBGR8888_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XBGR8888_A8 = 0x38414258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB1555	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB1555 = 0x35315258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB16161616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB16161616 = 0x38345258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB16161616F	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB16161616F = 0x48345258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB2101010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB2101010 = 0x30335258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB4444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB4444 = 0x32315258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB8888 = 1,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XRGB8888_A8	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XRGB8888_A8 = 0x38415258,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XVUY8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XVUY8888 = 0x59555658,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XVYU12_16161616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XVYU12_16161616 = 0x36335658,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XVYU16161616	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XVYU16161616 = 0x38345658,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XVYU2101010	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XVYU2101010 = 0x30335658,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_XYUV8888	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_XYUV8888 = 0x56555958,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y0L0	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y0L0 = 0x304c3059,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y0L2	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y0L2 = 0x324c3059,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y210	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y210 = 0x30313259,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y212	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y212 = 0x32313259,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y216	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y216 = 0x36313259,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y410	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y410 = 0x30313459,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y412	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y412 = 0x32313459,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_Y416	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_Y416 = 0x36313459,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV410	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV410 = 0x39565559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV411	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV411 = 0x31315559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV420	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV420 = 0x32315559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV420_10BIT	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV420_10BIT = 0x30315559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV420_8BIT	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV420_8BIT = 0x38305559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV422	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV422 = 0x36315559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUV444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUV444 = 0x34325559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YUYV	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YUYV = 0x56595559,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YVU410	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YVU410 = 0x39555659,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YVU411	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YVU411 = 0x31315659,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YVU420	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YVU420 = 0x32315659,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YVU422	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YVU422 = 0x36315659,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YVU444	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YVU444 = 0x34325659,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_FORMAT_YVYU	/usr/include/wayland-client-protocol.h	/^	WL_SHM_FORMAT_YVYU = 0x55595659,$/;"	e	enum:wl_shm_format	access:public
WL_SHM_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_INTERFACE$/;"	d
WL_SHM_POOL_CREATE_BUFFER	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_CREATE_BUFFER /;"	d
WL_SHM_POOL_CREATE_BUFFER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_CREATE_BUFFER_SINCE_VERSION /;"	d
WL_SHM_POOL_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_DESTROY /;"	d
WL_SHM_POOL_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_DESTROY_SINCE_VERSION /;"	d
WL_SHM_POOL_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_INTERFACE$/;"	d
WL_SHM_POOL_RESIZE	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_RESIZE /;"	d
WL_SHM_POOL_RESIZE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_POOL_RESIZE_SINCE_VERSION /;"	d
WL_SHM_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_RELEASE /;"	d
WL_SHM_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SHM_RELEASE_SINCE_VERSION /;"	d
WL_SUBCOMPOSITOR_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_SUBCOMPOSITOR_DESTROY /;"	d
WL_SUBCOMPOSITOR_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBCOMPOSITOR_DESTROY_SINCE_VERSION /;"	d
WL_SUBCOMPOSITOR_ERROR_BAD_PARENT	/usr/include/wayland-client-protocol.h	/^	WL_SUBCOMPOSITOR_ERROR_BAD_PARENT = 1,$/;"	e	enum:wl_subcompositor_error	access:public
WL_SUBCOMPOSITOR_ERROR_BAD_SURFACE	/usr/include/wayland-client-protocol.h	/^	WL_SUBCOMPOSITOR_ERROR_BAD_SURFACE = 0,$/;"	e	enum:wl_subcompositor_error	access:public
WL_SUBCOMPOSITOR_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SUBCOMPOSITOR_ERROR_ENUM$/;"	d
WL_SUBCOMPOSITOR_GET_SUBSURFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SUBCOMPOSITOR_GET_SUBSURFACE /;"	d
WL_SUBCOMPOSITOR_GET_SUBSURFACE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBCOMPOSITOR_GET_SUBSURFACE_SINCE_VERSION /;"	d
WL_SUBCOMPOSITOR_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SUBCOMPOSITOR_INTERFACE$/;"	d
WL_SUBSURFACE_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_DESTROY /;"	d
WL_SUBSURFACE_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_DESTROY_SINCE_VERSION /;"	d
WL_SUBSURFACE_ERROR_BAD_SURFACE	/usr/include/wayland-client-protocol.h	/^	WL_SUBSURFACE_ERROR_BAD_SURFACE = 0,$/;"	e	enum:wl_subsurface_error	access:public
WL_SUBSURFACE_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_ERROR_ENUM$/;"	d
WL_SUBSURFACE_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_INTERFACE$/;"	d
WL_SUBSURFACE_PLACE_ABOVE	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_PLACE_ABOVE /;"	d
WL_SUBSURFACE_PLACE_ABOVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_PLACE_ABOVE_SINCE_VERSION /;"	d
WL_SUBSURFACE_PLACE_BELOW	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_PLACE_BELOW /;"	d
WL_SUBSURFACE_PLACE_BELOW_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_PLACE_BELOW_SINCE_VERSION /;"	d
WL_SUBSURFACE_SET_DESYNC	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_SET_DESYNC /;"	d
WL_SUBSURFACE_SET_DESYNC_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_SET_DESYNC_SINCE_VERSION /;"	d
WL_SUBSURFACE_SET_POSITION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_SET_POSITION /;"	d
WL_SUBSURFACE_SET_POSITION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_SET_POSITION_SINCE_VERSION /;"	d
WL_SUBSURFACE_SET_SYNC	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_SET_SYNC /;"	d
WL_SUBSURFACE_SET_SYNC_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SUBSURFACE_SET_SYNC_SINCE_VERSION /;"	d
WL_SURFACE_ATTACH	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_ATTACH /;"	d
WL_SURFACE_ATTACH_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_ATTACH_SINCE_VERSION /;"	d
WL_SURFACE_COMMIT	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_COMMIT /;"	d
WL_SURFACE_COMMIT_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_COMMIT_SINCE_VERSION /;"	d
WL_SURFACE_DAMAGE	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_DAMAGE /;"	d
WL_SURFACE_DAMAGE_BUFFER	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_DAMAGE_BUFFER /;"	d
WL_SURFACE_DAMAGE_BUFFER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_DAMAGE_BUFFER_SINCE_VERSION /;"	d
WL_SURFACE_DAMAGE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_DAMAGE_SINCE_VERSION /;"	d
WL_SURFACE_DESTROY	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_DESTROY /;"	d
WL_SURFACE_DESTROY_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_DESTROY_SINCE_VERSION /;"	d
WL_SURFACE_ENTER_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_ENTER_SINCE_VERSION /;"	d
WL_SURFACE_ERROR_DEFUNCT_ROLE_OBJECT	/usr/include/wayland-client-protocol.h	/^	WL_SURFACE_ERROR_DEFUNCT_ROLE_OBJECT = 4,$/;"	e	enum:wl_surface_error	access:public
WL_SURFACE_ERROR_ENUM	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_ERROR_ENUM$/;"	d
WL_SURFACE_ERROR_INVALID_OFFSET	/usr/include/wayland-client-protocol.h	/^	WL_SURFACE_ERROR_INVALID_OFFSET = 3,$/;"	e	enum:wl_surface_error	access:public
WL_SURFACE_ERROR_INVALID_SCALE	/usr/include/wayland-client-protocol.h	/^	WL_SURFACE_ERROR_INVALID_SCALE = 0,$/;"	e	enum:wl_surface_error	access:public
WL_SURFACE_ERROR_INVALID_SIZE	/usr/include/wayland-client-protocol.h	/^	WL_SURFACE_ERROR_INVALID_SIZE = 2,$/;"	e	enum:wl_surface_error	access:public
WL_SURFACE_ERROR_INVALID_TRANSFORM	/usr/include/wayland-client-protocol.h	/^	WL_SURFACE_ERROR_INVALID_TRANSFORM = 1,$/;"	e	enum:wl_surface_error	access:public
WL_SURFACE_FRAME	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_FRAME /;"	d
WL_SURFACE_FRAME_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_FRAME_SINCE_VERSION /;"	d
WL_SURFACE_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_INTERFACE$/;"	d
WL_SURFACE_LEAVE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_LEAVE_SINCE_VERSION /;"	d
WL_SURFACE_OFFSET	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_OFFSET /;"	d
WL_SURFACE_OFFSET_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_OFFSET_SINCE_VERSION /;"	d
WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION /;"	d
WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION /;"	d
WL_SURFACE_SET_BUFFER_SCALE	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_BUFFER_SCALE /;"	d
WL_SURFACE_SET_BUFFER_SCALE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_BUFFER_SCALE_SINCE_VERSION /;"	d
WL_SURFACE_SET_BUFFER_TRANSFORM	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_BUFFER_TRANSFORM /;"	d
WL_SURFACE_SET_BUFFER_TRANSFORM_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_BUFFER_TRANSFORM_SINCE_VERSION /;"	d
WL_SURFACE_SET_INPUT_REGION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_INPUT_REGION /;"	d
WL_SURFACE_SET_INPUT_REGION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_INPUT_REGION_SINCE_VERSION /;"	d
WL_SURFACE_SET_OPAQUE_REGION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_OPAQUE_REGION /;"	d
WL_SURFACE_SET_OPAQUE_REGION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_SURFACE_SET_OPAQUE_REGION_SINCE_VERSION /;"	d
WL_TOUCH_CANCEL_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_CANCEL_SINCE_VERSION /;"	d
WL_TOUCH_DOWN_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_DOWN_SINCE_VERSION /;"	d
WL_TOUCH_FRAME_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_FRAME_SINCE_VERSION /;"	d
WL_TOUCH_INTERFACE	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_INTERFACE$/;"	d
WL_TOUCH_MOTION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_MOTION_SINCE_VERSION /;"	d
WL_TOUCH_ORIENTATION_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_ORIENTATION_SINCE_VERSION /;"	d
WL_TOUCH_RELEASE	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_RELEASE /;"	d
WL_TOUCH_RELEASE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_RELEASE_SINCE_VERSION /;"	d
WL_TOUCH_SHAPE_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_SHAPE_SINCE_VERSION /;"	d
WL_TOUCH_UP_SINCE_VERSION	/usr/include/wayland-client-protocol.h	/^#define WL_TOUCH_UP_SINCE_VERSION /;"	d
WP_CONTENT_TYPE_MANAGER_V1_DESTROY	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_MANAGER_V1_DESTROY /;"	d
WP_CONTENT_TYPE_MANAGER_V1_DESTROY_SINCE_VERSION	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_MANAGER_V1_DESTROY_SINCE_VERSION /;"	d
WP_CONTENT_TYPE_MANAGER_V1_ERROR_ALREADY_CONSTRUCTED	build/protocol/content-type-v1-client-protocol.h	/^	WP_CONTENT_TYPE_MANAGER_V1_ERROR_ALREADY_CONSTRUCTED = 0,$/;"	e	enum:wp_content_type_manager_v1_error	access:public
WP_CONTENT_TYPE_MANAGER_V1_ERROR_ENUM	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_MANAGER_V1_ERROR_ENUM$/;"	d
WP_CONTENT_TYPE_MANAGER_V1_GET_SURFACE_CONTENT_TYPE	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_MANAGER_V1_GET_SURFACE_CONTENT_TYPE /;"	d
WP_CONTENT_TYPE_MANAGER_V1_GET_SURFACE_CONTENT_TYPE_SINCE_VERSION	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_MANAGER_V1_GET_SURFACE_CONTENT_TYPE_SINCE_VERSION /;"	d
WP_CONTENT_TYPE_MANAGER_V1_INTERFACE	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_MANAGER_V1_INTERFACE$/;"	d
WP_CONTENT_TYPE_V1_DESTROY	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_V1_DESTROY /;"	d
WP_CONTENT_TYPE_V1_DESTROY_SINCE_VERSION	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_V1_DESTROY_SINCE_VERSION /;"	d
WP_CONTENT_TYPE_V1_INTERFACE	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_V1_INTERFACE$/;"	d
WP_CONTENT_TYPE_V1_SET_CONTENT_TYPE	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_V1_SET_CONTENT_TYPE /;"	d
WP_CONTENT_TYPE_V1_SET_CONTENT_TYPE_SINCE_VERSION	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_V1_SET_CONTENT_TYPE_SINCE_VERSION /;"	d
WP_CONTENT_TYPE_V1_TYPE_ENUM	build/protocol/content-type-v1-client-protocol.h	/^#define WP_CONTENT_TYPE_V1_TYPE_ENUM$/;"	d
WP_CONTENT_TYPE_V1_TYPE_GAME	build/protocol/content-type-v1-client-protocol.h	/^	WP_CONTENT_TYPE_V1_TYPE_GAME = 3,$/;"	e	enum:wp_content_type_v1_type	access:public
WP_CONTENT_TYPE_V1_TYPE_NONE	build/protocol/content-type-v1-client-protocol.h	/^	WP_CONTENT_TYPE_V1_TYPE_NONE = 0,$/;"	e	enum:wp_content_type_v1_type	access:public
WP_CONTENT_TYPE_V1_TYPE_PHOTO	build/protocol/content-type-v1-client-protocol.h	/^	WP_CONTENT_TYPE_V1_TYPE_PHOTO = 1,$/;"	e	enum:wp_content_type_v1_type	access:public
WP_CONTENT_TYPE_V1_TYPE_VIDEO	build/protocol/content-type-v1-client-protocol.h	/^	WP_CONTENT_TYPE_V1_TYPE_VIDEO = 2,$/;"	e	enum:wp_content_type_v1_type	access:public
WP_PRESENTATION_CLOCK_ID_SINCE_VERSION	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_CLOCK_ID_SINCE_VERSION /;"	d
WP_PRESENTATION_DESTROY	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_DESTROY /;"	d
WP_PRESENTATION_DESTROY_SINCE_VERSION	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_DESTROY_SINCE_VERSION /;"	d
WP_PRESENTATION_ERROR_ENUM	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_ERROR_ENUM$/;"	d
WP_PRESENTATION_ERROR_INVALID_FLAG	build/protocol/presentation-time-client-protocol.h	/^	WP_PRESENTATION_ERROR_INVALID_FLAG = 1,$/;"	e	enum:wp_presentation_error	access:public
WP_PRESENTATION_ERROR_INVALID_TIMESTAMP	build/protocol/presentation-time-client-protocol.h	/^	WP_PRESENTATION_ERROR_INVALID_TIMESTAMP = 0,$/;"	e	enum:wp_presentation_error	access:public
WP_PRESENTATION_FEEDBACK	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK /;"	d
WP_PRESENTATION_FEEDBACK_DISCARDED_SINCE_VERSION	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK_DISCARDED_SINCE_VERSION /;"	d
WP_PRESENTATION_FEEDBACK_INTERFACE	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK_INTERFACE$/;"	d
WP_PRESENTATION_FEEDBACK_KIND_ENUM	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK_KIND_ENUM$/;"	d
WP_PRESENTATION_FEEDBACK_KIND_HW_CLOCK	build/protocol/presentation-time-client-protocol.h	/^	WP_PRESENTATION_FEEDBACK_KIND_HW_CLOCK = 0x2,$/;"	e	enum:wp_presentation_feedback_kind	access:public
WP_PRESENTATION_FEEDBACK_KIND_HW_COMPLETION	build/protocol/presentation-time-client-protocol.h	/^	WP_PRESENTATION_FEEDBACK_KIND_HW_COMPLETION = 0x4,$/;"	e	enum:wp_presentation_feedback_kind	access:public
WP_PRESENTATION_FEEDBACK_KIND_VSYNC	build/protocol/presentation-time-client-protocol.h	/^	WP_PRESENTATION_FEEDBACK_KIND_VSYNC = 0x1,$/;"	e	enum:wp_presentation_feedback_kind	access:public
WP_PRESENTATION_FEEDBACK_KIND_ZERO_COPY	build/protocol/presentation-time-client-protocol.h	/^	WP_PRESENTATION_FEEDBACK_KIND_ZERO_COPY = 0x8,$/;"	e	enum:wp_presentation_feedback_kind	access:public
WP_PRESENTATION_FEEDBACK_PRESENTED_SINCE_VERSION	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK_PRESENTED_SINCE_VERSION /;"	d
WP_PRESENTATION_FEEDBACK_SINCE_VERSION	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK_SINCE_VERSION /;"	d
WP_PRESENTATION_FEEDBACK_SYNC_OUTPUT_SINCE_VERSION	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_FEEDBACK_SYNC_OUTPUT_SINCE_VERSION /;"	d
WP_PRESENTATION_INTERFACE	build/protocol/presentation-time-client-protocol.h	/^#define WP_PRESENTATION_INTERFACE$/;"	d
WP_VIEWPORTER_DESTROY	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORTER_DESTROY /;"	d
WP_VIEWPORTER_DESTROY_SINCE_VERSION	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORTER_DESTROY_SINCE_VERSION /;"	d
WP_VIEWPORTER_ERROR_ENUM	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORTER_ERROR_ENUM$/;"	d
WP_VIEWPORTER_ERROR_VIEWPORT_EXISTS	build/protocol/viewporter-client-protocol.h	/^	WP_VIEWPORTER_ERROR_VIEWPORT_EXISTS = 0,$/;"	e	enum:wp_viewporter_error	access:public
WP_VIEWPORTER_GET_VIEWPORT	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORTER_GET_VIEWPORT /;"	d
WP_VIEWPORTER_GET_VIEWPORT_SINCE_VERSION	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORTER_GET_VIEWPORT_SINCE_VERSION /;"	d
WP_VIEWPORTER_INTERFACE	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORTER_INTERFACE$/;"	d
WP_VIEWPORT_DESTROY	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_DESTROY /;"	d
WP_VIEWPORT_DESTROY_SINCE_VERSION	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_DESTROY_SINCE_VERSION /;"	d
WP_VIEWPORT_ERROR_BAD_SIZE	build/protocol/viewporter-client-protocol.h	/^	WP_VIEWPORT_ERROR_BAD_SIZE = 1,$/;"	e	enum:wp_viewport_error	access:public
WP_VIEWPORT_ERROR_BAD_VALUE	build/protocol/viewporter-client-protocol.h	/^	WP_VIEWPORT_ERROR_BAD_VALUE = 0,$/;"	e	enum:wp_viewport_error	access:public
WP_VIEWPORT_ERROR_ENUM	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_ERROR_ENUM$/;"	d
WP_VIEWPORT_ERROR_NO_SURFACE	build/protocol/viewporter-client-protocol.h	/^	WP_VIEWPORT_ERROR_NO_SURFACE = 3,$/;"	e	enum:wp_viewport_error	access:public
WP_VIEWPORT_ERROR_OUT_OF_BUFFER	build/protocol/viewporter-client-protocol.h	/^	WP_VIEWPORT_ERROR_OUT_OF_BUFFER = 2,$/;"	e	enum:wp_viewport_error	access:public
WP_VIEWPORT_INTERFACE	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_INTERFACE$/;"	d
WP_VIEWPORT_SET_DESTINATION	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_SET_DESTINATION /;"	d
WP_VIEWPORT_SET_DESTINATION_SINCE_VERSION	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_SET_DESTINATION_SINCE_VERSION /;"	d
WP_VIEWPORT_SET_SOURCE	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_SET_SOURCE /;"	d
WP_VIEWPORT_SET_SOURCE_SINCE_VERSION	build/protocol/viewporter-client-protocol.h	/^#define WP_VIEWPORT_SET_SOURCE_SINCE_VERSION /;"	d
XDG_POPUP_CONFIGURE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_CONFIGURE_SINCE_VERSION /;"	d
XDG_POPUP_DESTROY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_DESTROY /;"	d
XDG_POPUP_DESTROY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_DESTROY_SINCE_VERSION /;"	d
XDG_POPUP_ERROR_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_ERROR_ENUM$/;"	d
XDG_POPUP_ERROR_INVALID_GRAB	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POPUP_ERROR_INVALID_GRAB = 0,$/;"	e	enum:xdg_popup_error	access:public
XDG_POPUP_GRAB	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_GRAB /;"	d
XDG_POPUP_GRAB_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_GRAB_SINCE_VERSION /;"	d
XDG_POPUP_INTERFACE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_INTERFACE$/;"	d
XDG_POPUP_POPUP_DONE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_POPUP_DONE_SINCE_VERSION /;"	d
XDG_POPUP_REPOSITION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_REPOSITION /;"	d
XDG_POPUP_REPOSITIONED_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_REPOSITIONED_SINCE_VERSION /;"	d
XDG_POPUP_REPOSITION_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POPUP_REPOSITION_SINCE_VERSION /;"	d
XDG_POSITIONER_ANCHOR_BOTTOM	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_BOTTOM = 2,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_BOTTOM_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_BOTTOM_LEFT = 6,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_BOTTOM_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_BOTTOM_RIGHT = 8,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_ANCHOR_ENUM$/;"	d
XDG_POSITIONER_ANCHOR_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_LEFT = 3,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_NONE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_NONE = 0,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_RIGHT = 4,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_TOP	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_TOP = 1,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_TOP_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_TOP_LEFT = 5,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_ANCHOR_TOP_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ANCHOR_TOP_RIGHT = 7,$/;"	e	enum:xdg_positioner_anchor	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_ENUM$/;"	d
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_FLIP_X	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_FLIP_X = 4,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_FLIP_Y	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_FLIP_Y = 8,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_NONE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_NONE = 0,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_RESIZE_X	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_RESIZE_X = 16,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_RESIZE_Y	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_RESIZE_Y = 32,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_SLIDE_X	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_SLIDE_X = 1,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_SLIDE_Y	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_SLIDE_Y = 2,$/;"	e	enum:xdg_positioner_constraint_adjustment	access:public
XDG_POSITIONER_DESTROY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_DESTROY /;"	d
XDG_POSITIONER_DESTROY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_DESTROY_SINCE_VERSION /;"	d
XDG_POSITIONER_ERROR_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_ERROR_ENUM$/;"	d
XDG_POSITIONER_ERROR_INVALID_INPUT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_ERROR_INVALID_INPUT = 0,$/;"	e	enum:xdg_positioner_error	access:public
XDG_POSITIONER_GRAVITY_BOTTOM	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_BOTTOM = 2,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_BOTTOM_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_BOTTOM_LEFT = 6,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_BOTTOM_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_BOTTOM_RIGHT = 8,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_GRAVITY_ENUM$/;"	d
XDG_POSITIONER_GRAVITY_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_LEFT = 3,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_NONE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_NONE = 0,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_RIGHT = 4,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_TOP	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_TOP = 1,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_TOP_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_TOP_LEFT = 5,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_GRAVITY_TOP_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_POSITIONER_GRAVITY_TOP_RIGHT = 7,$/;"	e	enum:xdg_positioner_gravity	access:public
XDG_POSITIONER_INTERFACE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_INTERFACE$/;"	d
XDG_POSITIONER_SET_ANCHOR	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_ANCHOR /;"	d
XDG_POSITIONER_SET_ANCHOR_RECT	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_ANCHOR_RECT /;"	d
XDG_POSITIONER_SET_ANCHOR_RECT_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_ANCHOR_RECT_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_ANCHOR_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_ANCHOR_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT /;"	d
XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_GRAVITY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_GRAVITY /;"	d
XDG_POSITIONER_SET_GRAVITY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_GRAVITY_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_OFFSET	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_OFFSET /;"	d
XDG_POSITIONER_SET_OFFSET_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_OFFSET_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_PARENT_CONFIGURE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_PARENT_CONFIGURE /;"	d
XDG_POSITIONER_SET_PARENT_CONFIGURE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_PARENT_CONFIGURE_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_PARENT_SIZE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_PARENT_SIZE /;"	d
XDG_POSITIONER_SET_PARENT_SIZE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_PARENT_SIZE_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_REACTIVE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_REACTIVE /;"	d
XDG_POSITIONER_SET_REACTIVE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_REACTIVE_SINCE_VERSION /;"	d
XDG_POSITIONER_SET_SIZE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_SIZE /;"	d
XDG_POSITIONER_SET_SIZE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_POSITIONER_SET_SIZE_SINCE_VERSION /;"	d
XDG_SHELL_CLIENT_PROTOCOL_H	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SHELL_CLIENT_PROTOCOL_H$/;"	d
XDG_SURFACE_ACK_CONFIGURE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_ACK_CONFIGURE /;"	d
XDG_SURFACE_ACK_CONFIGURE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_ACK_CONFIGURE_SINCE_VERSION /;"	d
XDG_SURFACE_CONFIGURE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_CONFIGURE_SINCE_VERSION /;"	d
XDG_SURFACE_DESTROY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_DESTROY /;"	d
XDG_SURFACE_DESTROY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_DESTROY_SINCE_VERSION /;"	d
XDG_SURFACE_ERROR_ALREADY_CONSTRUCTED	build/protocol/xdg-shell-client-protocol.h	/^	XDG_SURFACE_ERROR_ALREADY_CONSTRUCTED = 2,$/;"	e	enum:xdg_surface_error	access:public
XDG_SURFACE_ERROR_DEFUNCT_ROLE_OBJECT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_SURFACE_ERROR_DEFUNCT_ROLE_OBJECT = 6,$/;"	e	enum:xdg_surface_error	access:public
XDG_SURFACE_ERROR_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_ERROR_ENUM$/;"	d
XDG_SURFACE_ERROR_INVALID_SERIAL	build/protocol/xdg-shell-client-protocol.h	/^	XDG_SURFACE_ERROR_INVALID_SERIAL = 4,$/;"	e	enum:xdg_surface_error	access:public
XDG_SURFACE_ERROR_INVALID_SIZE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_SURFACE_ERROR_INVALID_SIZE = 5,$/;"	e	enum:xdg_surface_error	access:public
XDG_SURFACE_ERROR_NOT_CONSTRUCTED	build/protocol/xdg-shell-client-protocol.h	/^	XDG_SURFACE_ERROR_NOT_CONSTRUCTED = 1,$/;"	e	enum:xdg_surface_error	access:public
XDG_SURFACE_ERROR_UNCONFIGURED_BUFFER	build/protocol/xdg-shell-client-protocol.h	/^	XDG_SURFACE_ERROR_UNCONFIGURED_BUFFER = 3,$/;"	e	enum:xdg_surface_error	access:public
XDG_SURFACE_GET_POPUP	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_GET_POPUP /;"	d
XDG_SURFACE_GET_POPUP_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_GET_POPUP_SINCE_VERSION /;"	d
XDG_SURFACE_GET_TOPLEVEL	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_GET_TOPLEVEL /;"	d
XDG_SURFACE_GET_TOPLEVEL_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_GET_TOPLEVEL_SINCE_VERSION /;"	d
XDG_SURFACE_INTERFACE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_INTERFACE$/;"	d
XDG_SURFACE_SET_WINDOW_GEOMETRY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_SET_WINDOW_GEOMETRY /;"	d
XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE_VERSION /;"	d
XDG_TOPLEVEL_CLOSE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_CLOSE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION /;"	d
XDG_TOPLEVEL_CONFIGURE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_CONFIGURE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_DESTROY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_DESTROY /;"	d
XDG_TOPLEVEL_DESTROY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_DESTROY_SINCE_VERSION /;"	d
XDG_TOPLEVEL_ERROR_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_ERROR_ENUM$/;"	d
XDG_TOPLEVEL_ERROR_INVALID_PARENT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_ERROR_INVALID_PARENT = 1,$/;"	e	enum:xdg_toplevel_error	access:public
XDG_TOPLEVEL_ERROR_INVALID_RESIZE_EDGE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_ERROR_INVALID_RESIZE_EDGE = 0,$/;"	e	enum:xdg_toplevel_error	access:public
XDG_TOPLEVEL_ERROR_INVALID_SIZE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_ERROR_INVALID_SIZE = 2,$/;"	e	enum:xdg_toplevel_error	access:public
XDG_TOPLEVEL_INTERFACE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_INTERFACE$/;"	d
XDG_TOPLEVEL_MOVE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_MOVE /;"	d
XDG_TOPLEVEL_MOVE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_MOVE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_RESIZE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_RESIZE /;"	d
XDG_TOPLEVEL_RESIZE_EDGE_BOTTOM	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_BOTTOM = 2,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_BOTTOM_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_BOTTOM_LEFT = 6,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_BOTTOM_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_BOTTOM_RIGHT = 10,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_RESIZE_EDGE_ENUM$/;"	d
XDG_TOPLEVEL_RESIZE_EDGE_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_LEFT = 4,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_NONE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_NONE = 0,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_RIGHT = 8,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_TOP	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_TOP = 1,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_TOP_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_TOP_LEFT = 5,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_EDGE_TOP_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_RESIZE_EDGE_TOP_RIGHT = 9,$/;"	e	enum:xdg_toplevel_resize_edge	access:public
XDG_TOPLEVEL_RESIZE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_RESIZE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_APP_ID	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_APP_ID /;"	d
XDG_TOPLEVEL_SET_APP_ID_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_APP_ID_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_FULLSCREEN	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_FULLSCREEN /;"	d
XDG_TOPLEVEL_SET_FULLSCREEN_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_FULLSCREEN_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_MAXIMIZED	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MAXIMIZED /;"	d
XDG_TOPLEVEL_SET_MAXIMIZED_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MAXIMIZED_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_MAX_SIZE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MAX_SIZE /;"	d
XDG_TOPLEVEL_SET_MAX_SIZE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MAX_SIZE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_MINIMIZED	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MINIMIZED /;"	d
XDG_TOPLEVEL_SET_MINIMIZED_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MINIMIZED_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_MIN_SIZE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MIN_SIZE /;"	d
XDG_TOPLEVEL_SET_MIN_SIZE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_MIN_SIZE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_PARENT	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_PARENT /;"	d
XDG_TOPLEVEL_SET_PARENT_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_PARENT_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SET_TITLE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_TITLE /;"	d
XDG_TOPLEVEL_SET_TITLE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SET_TITLE_SINCE_VERSION /;"	d
XDG_TOPLEVEL_SHOW_WINDOW_MENU	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SHOW_WINDOW_MENU /;"	d
XDG_TOPLEVEL_SHOW_WINDOW_MENU_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_SHOW_WINDOW_MENU_SINCE_VERSION /;"	d
XDG_TOPLEVEL_STATE_ACTIVATED	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_ACTIVATED = 4,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_STATE_ENUM$/;"	d
XDG_TOPLEVEL_STATE_FULLSCREEN	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_FULLSCREEN = 2,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_MAXIMIZED	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_MAXIMIZED = 1,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_RESIZING	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_RESIZING = 3,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_SUSPENDED	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_SUSPENDED = 9,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_SUSPENDED_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_STATE_SUSPENDED_SINCE_VERSION /;"	d
XDG_TOPLEVEL_STATE_TILED_BOTTOM	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_TILED_BOTTOM = 8,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_TILED_BOTTOM_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_STATE_TILED_BOTTOM_SINCE_VERSION /;"	d
XDG_TOPLEVEL_STATE_TILED_LEFT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_TILED_LEFT = 5,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_TILED_LEFT_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_STATE_TILED_LEFT_SINCE_VERSION /;"	d
XDG_TOPLEVEL_STATE_TILED_RIGHT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_TILED_RIGHT = 6,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_TILED_RIGHT_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_STATE_TILED_RIGHT_SINCE_VERSION /;"	d
XDG_TOPLEVEL_STATE_TILED_TOP	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_STATE_TILED_TOP = 7,$/;"	e	enum:xdg_toplevel_state	access:public
XDG_TOPLEVEL_STATE_TILED_TOP_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_STATE_TILED_TOP_SINCE_VERSION /;"	d
XDG_TOPLEVEL_UNSET_FULLSCREEN	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_UNSET_FULLSCREEN /;"	d
XDG_TOPLEVEL_UNSET_FULLSCREEN_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_UNSET_FULLSCREEN_SINCE_VERSION /;"	d
XDG_TOPLEVEL_UNSET_MAXIMIZED	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_UNSET_MAXIMIZED /;"	d
XDG_TOPLEVEL_UNSET_MAXIMIZED_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_UNSET_MAXIMIZED_SINCE_VERSION /;"	d
XDG_TOPLEVEL_WM_CAPABILITIES_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_WM_CAPABILITIES_ENUM$/;"	d
XDG_TOPLEVEL_WM_CAPABILITIES_FULLSCREEN	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_WM_CAPABILITIES_FULLSCREEN = 3,$/;"	e	enum:xdg_toplevel_wm_capabilities	access:public
XDG_TOPLEVEL_WM_CAPABILITIES_MAXIMIZE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_WM_CAPABILITIES_MAXIMIZE = 2,$/;"	e	enum:xdg_toplevel_wm_capabilities	access:public
XDG_TOPLEVEL_WM_CAPABILITIES_MINIMIZE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_WM_CAPABILITIES_MINIMIZE = 4,$/;"	e	enum:xdg_toplevel_wm_capabilities	access:public
XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION /;"	d
XDG_TOPLEVEL_WM_CAPABILITIES_WINDOW_MENU	build/protocol/xdg-shell-client-protocol.h	/^	XDG_TOPLEVEL_WM_CAPABILITIES_WINDOW_MENU = 1,$/;"	e	enum:xdg_toplevel_wm_capabilities	access:public
XDG_WM_BASE_CREATE_POSITIONER	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_CREATE_POSITIONER /;"	d
XDG_WM_BASE_CREATE_POSITIONER_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_CREATE_POSITIONER_SINCE_VERSION /;"	d
XDG_WM_BASE_DESTROY	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_DESTROY /;"	d
XDG_WM_BASE_DESTROY_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_DESTROY_SINCE_VERSION /;"	d
XDG_WM_BASE_ERROR_DEFUNCT_SURFACES	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_DEFUNCT_SURFACES = 1,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_ERROR_ENUM	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_ERROR_ENUM$/;"	d
XDG_WM_BASE_ERROR_INVALID_POPUP_PARENT	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_INVALID_POPUP_PARENT = 3,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_ERROR_INVALID_POSITIONER	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_INVALID_POSITIONER = 5,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_ERROR_INVALID_SURFACE_STATE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_INVALID_SURFACE_STATE = 4,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_ERROR_NOT_THE_TOPMOST_POPUP	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_NOT_THE_TOPMOST_POPUP = 2,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_ERROR_ROLE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_ROLE = 0,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_ERROR_UNRESPONSIVE	build/protocol/xdg-shell-client-protocol.h	/^	XDG_WM_BASE_ERROR_UNRESPONSIVE = 6,$/;"	e	enum:xdg_wm_base_error	access:public
XDG_WM_BASE_GET_XDG_SURFACE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_GET_XDG_SURFACE /;"	d
XDG_WM_BASE_GET_XDG_SURFACE_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_GET_XDG_SURFACE_SINCE_VERSION /;"	d
XDG_WM_BASE_INTERFACE	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_INTERFACE$/;"	d
XDG_WM_BASE_PING_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_PING_SINCE_VERSION /;"	d
XDG_WM_BASE_PONG	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_PONG /;"	d
XDG_WM_BASE_PONG_SINCE_VERSION	build/protocol/xdg-shell-client-protocol.h	/^#define XDG_WM_BASE_PONG_SINCE_VERSION /;"	d
__has_attribute	build/protocol/content-type-v1-protocol.c	/^# define __has_attribute(/;"	d	file:	signature:(x)
__has_attribute	build/protocol/presentation-time-protocol.c	/^# define __has_attribute(/;"	d	file:	signature:(x)
__has_attribute	build/protocol/viewporter-protocol.c	/^# define __has_attribute(/;"	d	file:	signature:(x)
__has_attribute	build/protocol/xdg-shell-protocol.c	/^# define __has_attribute(/;"	d	file:	signature:(x)
action	/usr/include/wayland-client-protocol.h	/^	void (*action)(void *data,$/;"	m	struct:wl_data_offer_listener	typeref:typename:void (*)(void * data,struct wl_data_offer * wl_data_offer,uint32_t dnd_action)	access:public
action	/usr/include/wayland-client-protocol.h	/^	void (*action)(void *data,$/;"	m	struct:wl_data_source_listener	typeref:typename:void (*)(void * data,struct wl_data_source * wl_data_source,uint32_t dnd_action)	access:public
axis	/usr/include/wayland-client-protocol.h	/^	void (*axis)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t time,uint32_t axis,wl_fixed_t value)	access:public
axis_discrete	/usr/include/wayland-client-protocol.h	/^	void (*axis_discrete)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t axis,int32_t discrete)	access:public
axis_relative_direction	/usr/include/wayland-client-protocol.h	/^	void (*axis_relative_direction)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t axis,uint32_t direction)	access:public
axis_source	/usr/include/wayland-client-protocol.h	/^	void (*axis_source)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t axis_source)	access:public
axis_stop	/usr/include/wayland-client-protocol.h	/^	void (*axis_stop)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t time,uint32_t axis)	access:public
axis_value120	/usr/include/wayland-client-protocol.h	/^	void (*axis_value120)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t axis,int32_t value120)	access:public
button	/usr/include/wayland-client-protocol.h	/^	void (*button)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t serial,uint32_t time,uint32_t button,uint32_t state)	access:public
cancel	/usr/include/wayland-client-protocol.h	/^	void (*cancel)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch)	access:public
cancelled	/usr/include/wayland-client-protocol.h	/^	void (*cancelled)(void *data,$/;"	m	struct:wl_data_source_listener	typeref:typename:void (*)(void * data,struct wl_data_source * wl_data_source)	access:public
capabilities	/usr/include/wayland-client-protocol.h	/^	void (*capabilities)(void *data,$/;"	m	struct:wl_seat_listener	typeref:typename:void (*)(void * data,struct wl_seat * wl_seat,uint32_t capabilities)	access:public
clock_id	build/protocol/presentation-time-client-protocol.h	/^	void (*clock_id)(void *data,$/;"	m	struct:wp_presentation_listener	typeref:typename:void (*)(void * data,struct wp_presentation * wp_presentation,uint32_t clk_id)	access:public
close	build/protocol/xdg-shell-client-protocol.h	/^	void (*close)(void *data,$/;"	m	struct:xdg_toplevel_listener	typeref:typename:void (*)(void * data,struct xdg_toplevel * xdg_toplevel)	access:public
configure	/usr/include/wayland-client-protocol.h	/^	void (*configure)(void *data,$/;"	m	struct:wl_shell_surface_listener	typeref:typename:void (*)(void * data,struct wl_shell_surface * wl_shell_surface,uint32_t edges,int32_t width,int32_t height)	access:public
configure	build/protocol/xdg-shell-client-protocol.h	/^	void (*configure)(void *data,$/;"	m	struct:xdg_popup_listener	typeref:typename:void (*)(void * data,struct xdg_popup * xdg_popup,int32_t x,int32_t y,int32_t width,int32_t height)	access:public
configure	build/protocol/xdg-shell-client-protocol.h	/^	void (*configure)(void *data,$/;"	m	struct:xdg_surface_listener	typeref:typename:void (*)(void * data,struct xdg_surface * xdg_surface,uint32_t serial)	access:public
configure	build/protocol/xdg-shell-client-protocol.h	/^	void (*configure)(void *data,$/;"	m	struct:xdg_toplevel_listener	typeref:typename:void (*)(void * data,struct xdg_toplevel * xdg_toplevel,int32_t width,int32_t height,struct wl_array * states)	access:public
configure_bounds	build/protocol/xdg-shell-client-protocol.h	/^	void (*configure_bounds)(void *data,$/;"	m	struct:xdg_toplevel_listener	typeref:typename:void (*)(void * data,struct xdg_toplevel * xdg_toplevel,int32_t width,int32_t height)	access:public
content_type_v1_types	build/protocol/content-type-v1-protocol.c	/^static const struct wl_interface *content_type_v1_types[] = {$/;"	v	typeref:typename:const struct wl_interface * []	file:
data_offer	/usr/include/wayland-client-protocol.h	/^	void (*data_offer)(void *data,$/;"	m	struct:wl_data_device_listener	typeref:typename:void (*)(void * data,struct wl_data_device * wl_data_device,struct wl_data_offer * id)	access:public
delete_id	/usr/include/wayland-client-protocol.h	/^	void (*delete_id)(void *data,$/;"	m	struct:wl_display_listener	typeref:typename:void (*)(void * data,struct wl_display * wl_display,uint32_t id)	access:public
description	/usr/include/wayland-client-protocol.h	/^	void (*description)(void *data,$/;"	m	struct:wl_output_listener	typeref:typename:void (*)(void * data,struct wl_output * wl_output,const char * description)	access:public
discarded	build/protocol/presentation-time-client-protocol.h	/^	void (*discarded)(void *data,$/;"	m	struct:wp_presentation_feedback_listener	typeref:typename:void (*)(void * data,struct wp_presentation_feedback * wp_presentation_feedback)	access:public
dnd_drop_performed	/usr/include/wayland-client-protocol.h	/^	void (*dnd_drop_performed)(void *data,$/;"	m	struct:wl_data_source_listener	typeref:typename:void (*)(void * data,struct wl_data_source * wl_data_source)	access:public
dnd_finished	/usr/include/wayland-client-protocol.h	/^	void (*dnd_finished)(void *data,$/;"	m	struct:wl_data_source_listener	typeref:typename:void (*)(void * data,struct wl_data_source * wl_data_source)	access:public
done	/usr/include/wayland-client-protocol.h	/^	void (*done)(void *data,$/;"	m	struct:wl_callback_listener	typeref:typename:void (*)(void * data,struct wl_callback * wl_callback,uint32_t callback_data)	access:public
done	/usr/include/wayland-client-protocol.h	/^	void (*done)(void *data,$/;"	m	struct:wl_output_listener	typeref:typename:void (*)(void * data,struct wl_output * wl_output)	access:public
down	/usr/include/wayland-client-protocol.h	/^	void (*down)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch,uint32_t serial,uint32_t time,struct wl_surface * surface,int32_t id,wl_fixed_t x,wl_fixed_t y)	access:public
drop	/usr/include/wayland-client-protocol.h	/^	void (*drop)(void *data,$/;"	m	struct:wl_data_device_listener	typeref:typename:void (*)(void * data,struct wl_data_device * wl_data_device)	access:public
enter	/usr/include/wayland-client-protocol.h	/^	void (*enter)(void *data,$/;"	m	struct:wl_data_device_listener	typeref:typename:void (*)(void * data,struct wl_data_device * wl_data_device,uint32_t serial,struct wl_surface * surface,wl_fixed_t x,wl_fixed_t y,struct wl_data_offer * id)	access:public
enter	/usr/include/wayland-client-protocol.h	/^	void (*enter)(void *data,$/;"	m	struct:wl_keyboard_listener	typeref:typename:void (*)(void * data,struct wl_keyboard * wl_keyboard,uint32_t serial,struct wl_surface * surface,struct wl_array * keys)	access:public
enter	/usr/include/wayland-client-protocol.h	/^	void (*enter)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t serial,struct wl_surface * surface,wl_fixed_t surface_x,wl_fixed_t surface_y)	access:public
enter	/usr/include/wayland-client-protocol.h	/^	void (*enter)(void *data,$/;"	m	struct:wl_surface_listener	typeref:typename:void (*)(void * data,struct wl_surface * wl_surface,struct wl_output * output)	access:public
error	/usr/include/wayland-client-protocol.h	/^	void (*error)(void *data,$/;"	m	struct:wl_display_listener	typeref:typename:void (*)(void * data,struct wl_display * wl_display,void * object_id,uint32_t code,const char * message)	access:public
format	/usr/include/wayland-client-protocol.h	/^	void (*format)(void *data,$/;"	m	struct:wl_shm_listener	typeref:typename:void (*)(void * data,struct wl_shm * wl_shm,uint32_t format)	access:public
frame	/usr/include/wayland-client-protocol.h	/^	void (*frame)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer)	access:public
frame	/usr/include/wayland-client-protocol.h	/^	void (*frame)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch)	access:public
geometry	/usr/include/wayland-client-protocol.h	/^	void (*geometry)(void *data,$/;"	m	struct:wl_output_listener	typeref:typename:void (*)(void * data,struct wl_output * wl_output,int32_t x,int32_t y,int32_t physical_width,int32_t physical_height,int32_t subpixel,const char * make,const char * model,int32_t transform)	access:public
global	/usr/include/wayland-client-protocol.h	/^	void (*global)(void *data,$/;"	m	struct:wl_registry_listener	typeref:typename:void (*)(void * data,struct wl_registry * wl_registry,uint32_t name,const char * interface,uint32_t version)	access:public
global_remove	/usr/include/wayland-client-protocol.h	/^	void (*global_remove)(void *data,$/;"	m	struct:wl_registry_listener	typeref:typename:void (*)(void * data,struct wl_registry * wl_registry,uint32_t name)	access:public
key	/usr/include/wayland-client-protocol.h	/^	void (*key)(void *data,$/;"	m	struct:wl_keyboard_listener	typeref:typename:void (*)(void * data,struct wl_keyboard * wl_keyboard,uint32_t serial,uint32_t time,uint32_t key,uint32_t state)	access:public
keymap	/usr/include/wayland-client-protocol.h	/^	void (*keymap)(void *data,$/;"	m	struct:wl_keyboard_listener	typeref:typename:void (*)(void * data,struct wl_keyboard * wl_keyboard,uint32_t format,int32_t fd,uint32_t size)	access:public
leave	/usr/include/wayland-client-protocol.h	/^	void (*leave)(void *data,$/;"	m	struct:wl_data_device_listener	typeref:typename:void (*)(void * data,struct wl_data_device * wl_data_device)	access:public
leave	/usr/include/wayland-client-protocol.h	/^	void (*leave)(void *data,$/;"	m	struct:wl_keyboard_listener	typeref:typename:void (*)(void * data,struct wl_keyboard * wl_keyboard,uint32_t serial,struct wl_surface * surface)	access:public
leave	/usr/include/wayland-client-protocol.h	/^	void (*leave)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t serial,struct wl_surface * surface)	access:public
leave	/usr/include/wayland-client-protocol.h	/^	void (*leave)(void *data,$/;"	m	struct:wl_surface_listener	typeref:typename:void (*)(void * data,struct wl_surface * wl_surface,struct wl_output * output)	access:public
mode	/usr/include/wayland-client-protocol.h	/^	void (*mode)(void *data,$/;"	m	struct:wl_output_listener	typeref:typename:void (*)(void * data,struct wl_output * wl_output,uint32_t flags,int32_t width,int32_t height,int32_t refresh)	access:public
modifiers	/usr/include/wayland-client-protocol.h	/^	void (*modifiers)(void *data,$/;"	m	struct:wl_keyboard_listener	typeref:typename:void (*)(void * data,struct wl_keyboard * wl_keyboard,uint32_t serial,uint32_t mods_depressed,uint32_t mods_latched,uint32_t mods_locked,uint32_t group)	access:public
motion	/usr/include/wayland-client-protocol.h	/^	void (*motion)(void *data,$/;"	m	struct:wl_data_device_listener	typeref:typename:void (*)(void * data,struct wl_data_device * wl_data_device,uint32_t time,wl_fixed_t x,wl_fixed_t y)	access:public
motion	/usr/include/wayland-client-protocol.h	/^	void (*motion)(void *data,$/;"	m	struct:wl_pointer_listener	typeref:typename:void (*)(void * data,struct wl_pointer * wl_pointer,uint32_t time,wl_fixed_t surface_x,wl_fixed_t surface_y)	access:public
motion	/usr/include/wayland-client-protocol.h	/^	void (*motion)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch,uint32_t time,int32_t id,wl_fixed_t x,wl_fixed_t y)	access:public
name	/usr/include/wayland-client-protocol.h	/^	void (*name)(void *data,$/;"	m	struct:wl_output_listener	typeref:typename:void (*)(void * data,struct wl_output * wl_output,const char * name)	access:public
name	/usr/include/wayland-client-protocol.h	/^	void (*name)(void *data,$/;"	m	struct:wl_seat_listener	typeref:typename:void (*)(void * data,struct wl_seat * wl_seat,const char * name)	access:public
offer	/usr/include/wayland-client-protocol.h	/^	void (*offer)(void *data,$/;"	m	struct:wl_data_offer_listener	typeref:typename:void (*)(void * data,struct wl_data_offer * wl_data_offer,const char * mime_type)	access:public
orientation	/usr/include/wayland-client-protocol.h	/^	void (*orientation)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch,int32_t id,wl_fixed_t orientation)	access:public
ping	/usr/include/wayland-client-protocol.h	/^	void (*ping)(void *data,$/;"	m	struct:wl_shell_surface_listener	typeref:typename:void (*)(void * data,struct wl_shell_surface * wl_shell_surface,uint32_t serial)	access:public
ping	build/protocol/xdg-shell-client-protocol.h	/^	void (*ping)(void *data,$/;"	m	struct:xdg_wm_base_listener	typeref:typename:void (*)(void * data,struct xdg_wm_base * xdg_wm_base,uint32_t serial)	access:public
popup_done	/usr/include/wayland-client-protocol.h	/^	void (*popup_done)(void *data,$/;"	m	struct:wl_shell_surface_listener	typeref:typename:void (*)(void * data,struct wl_shell_surface * wl_shell_surface)	access:public
popup_done	build/protocol/xdg-shell-client-protocol.h	/^	void (*popup_done)(void *data,$/;"	m	struct:xdg_popup_listener	typeref:typename:void (*)(void * data,struct xdg_popup * xdg_popup)	access:public
preferred_buffer_scale	/usr/include/wayland-client-protocol.h	/^	void (*preferred_buffer_scale)(void *data,$/;"	m	struct:wl_surface_listener	typeref:typename:void (*)(void * data,struct wl_surface * wl_surface,int32_t factor)	access:public
preferred_buffer_transform	/usr/include/wayland-client-protocol.h	/^	void (*preferred_buffer_transform)(void *data,$/;"	m	struct:wl_surface_listener	typeref:typename:void (*)(void * data,struct wl_surface * wl_surface,uint32_t transform)	access:public
presentation_time_types	build/protocol/presentation-time-protocol.c	/^static const struct wl_interface *presentation_time_types[] = {$/;"	v	typeref:typename:const struct wl_interface * []	file:
presented	build/protocol/presentation-time-client-protocol.h	/^	void (*presented)(void *data,$/;"	m	struct:wp_presentation_feedback_listener	typeref:typename:void (*)(void * data,struct wp_presentation_feedback * wp_presentation_feedback,uint32_t tv_sec_hi,uint32_t tv_sec_lo,uint32_t tv_nsec,uint32_t refresh,uint32_t seq_hi,uint32_t seq_lo,uint32_t flags)	access:public
release	/usr/include/wayland-client-protocol.h	/^	void (*release)(void *data,$/;"	m	struct:wl_buffer_listener	typeref:typename:void (*)(void * data,struct wl_buffer * wl_buffer)	access:public
repeat_info	/usr/include/wayland-client-protocol.h	/^	void (*repeat_info)(void *data,$/;"	m	struct:wl_keyboard_listener	typeref:typename:void (*)(void * data,struct wl_keyboard * wl_keyboard,int32_t rate,int32_t delay)	access:public
repositioned	build/protocol/xdg-shell-client-protocol.h	/^	void (*repositioned)(void *data,$/;"	m	struct:xdg_popup_listener	typeref:typename:void (*)(void * data,struct xdg_popup * xdg_popup,uint32_t token)	access:public
scale	/usr/include/wayland-client-protocol.h	/^	void (*scale)(void *data,$/;"	m	struct:wl_output_listener	typeref:typename:void (*)(void * data,struct wl_output * wl_output,int32_t factor)	access:public
selection	/usr/include/wayland-client-protocol.h	/^	void (*selection)(void *data,$/;"	m	struct:wl_data_device_listener	typeref:typename:void (*)(void * data,struct wl_data_device * wl_data_device,struct wl_data_offer * id)	access:public
send	/usr/include/wayland-client-protocol.h	/^	void (*send)(void *data,$/;"	m	struct:wl_data_source_listener	typeref:typename:void (*)(void * data,struct wl_data_source * wl_data_source,const char * mime_type,int32_t fd)	access:public
shape	/usr/include/wayland-client-protocol.h	/^	void (*shape)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch,int32_t id,wl_fixed_t major,wl_fixed_t minor)	access:public
source_actions	/usr/include/wayland-client-protocol.h	/^	void (*source_actions)(void *data,$/;"	m	struct:wl_data_offer_listener	typeref:typename:void (*)(void * data,struct wl_data_offer * wl_data_offer,uint32_t source_actions)	access:public
sync_output	build/protocol/presentation-time-client-protocol.h	/^	void (*sync_output)(void *data,$/;"	m	struct:wp_presentation_feedback_listener	typeref:typename:void (*)(void * data,struct wp_presentation_feedback * wp_presentation_feedback,struct wl_output * output)	access:public
target	/usr/include/wayland-client-protocol.h	/^	void (*target)(void *data,$/;"	m	struct:wl_data_source_listener	typeref:typename:void (*)(void * data,struct wl_data_source * wl_data_source,const char * mime_type)	access:public
up	/usr/include/wayland-client-protocol.h	/^	void (*up)(void *data,$/;"	m	struct:wl_touch_listener	typeref:typename:void (*)(void * data,struct wl_touch * wl_touch,uint32_t serial,uint32_t time,int32_t id)	access:public
viewporter_types	build/protocol/viewporter-protocol.c	/^static const struct wl_interface *viewporter_types[] = {$/;"	v	typeref:typename:const struct wl_interface * []	file:
wl_buffer_add_listener	/usr/include/wayland-client-protocol.h	/^wl_buffer_add_listener(struct wl_buffer *wl_buffer,$/;"	f	typeref:typename:int	signature:(struct wl_buffer * wl_buffer,const struct wl_buffer_listener * listener,void * data)
wl_buffer_destroy	/usr/include/wayland-client-protocol.h	/^wl_buffer_destroy(struct wl_buffer *wl_buffer)$/;"	f	typeref:typename:void	signature:(struct wl_buffer * wl_buffer)
wl_buffer_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_buffer_get_user_data(struct wl_buffer *wl_buffer)$/;"	f	typeref:typename:void *	signature:(struct wl_buffer * wl_buffer)
wl_buffer_get_version	/usr/include/wayland-client-protocol.h	/^wl_buffer_get_version(struct wl_buffer *wl_buffer)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_buffer * wl_buffer)
wl_buffer_listener	/usr/include/wayland-client-protocol.h	/^struct wl_buffer_listener {$/;"	s
wl_buffer_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_buffer_set_user_data(struct wl_buffer *wl_buffer, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_buffer * wl_buffer,void * user_data)
wl_callback_add_listener	/usr/include/wayland-client-protocol.h	/^wl_callback_add_listener(struct wl_callback *wl_callback,$/;"	f	typeref:typename:int	signature:(struct wl_callback * wl_callback,const struct wl_callback_listener * listener,void * data)
wl_callback_destroy	/usr/include/wayland-client-protocol.h	/^wl_callback_destroy(struct wl_callback *wl_callback)$/;"	f	typeref:typename:void	signature:(struct wl_callback * wl_callback)
wl_callback_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_callback_get_user_data(struct wl_callback *wl_callback)$/;"	f	typeref:typename:void *	signature:(struct wl_callback * wl_callback)
wl_callback_get_version	/usr/include/wayland-client-protocol.h	/^wl_callback_get_version(struct wl_callback *wl_callback)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_callback * wl_callback)
wl_callback_listener	/usr/include/wayland-client-protocol.h	/^struct wl_callback_listener {$/;"	s
wl_callback_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_callback_set_user_data(struct wl_callback *wl_callback, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_callback * wl_callback,void * user_data)
wl_compositor_create_region	/usr/include/wayland-client-protocol.h	/^wl_compositor_create_region(struct wl_compositor *wl_compositor)$/;"	f	typeref:struct:wl_region *	signature:(struct wl_compositor * wl_compositor)
wl_compositor_create_surface	/usr/include/wayland-client-protocol.h	/^wl_compositor_create_surface(struct wl_compositor *wl_compositor)$/;"	f	typeref:struct:wl_surface *	signature:(struct wl_compositor * wl_compositor)
wl_compositor_destroy	/usr/include/wayland-client-protocol.h	/^wl_compositor_destroy(struct wl_compositor *wl_compositor)$/;"	f	typeref:typename:void	signature:(struct wl_compositor * wl_compositor)
wl_compositor_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_compositor_get_user_data(struct wl_compositor *wl_compositor)$/;"	f	typeref:typename:void *	signature:(struct wl_compositor * wl_compositor)
wl_compositor_get_version	/usr/include/wayland-client-protocol.h	/^wl_compositor_get_version(struct wl_compositor *wl_compositor)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_compositor * wl_compositor)
wl_compositor_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_compositor_set_user_data(struct wl_compositor *wl_compositor, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_compositor * wl_compositor,void * user_data)
wl_data_device_add_listener	/usr/include/wayland-client-protocol.h	/^wl_data_device_add_listener(struct wl_data_device *wl_data_device,$/;"	f	typeref:typename:int	signature:(struct wl_data_device * wl_data_device,const struct wl_data_device_listener * listener,void * data)
wl_data_device_destroy	/usr/include/wayland-client-protocol.h	/^wl_data_device_destroy(struct wl_data_device *wl_data_device)$/;"	f	typeref:typename:void	signature:(struct wl_data_device * wl_data_device)
wl_data_device_error	/usr/include/wayland-client-protocol.h	/^enum wl_data_device_error {$/;"	g
wl_data_device_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_device_get_user_data(struct wl_data_device *wl_data_device)$/;"	f	typeref:typename:void *	signature:(struct wl_data_device * wl_data_device)
wl_data_device_get_version	/usr/include/wayland-client-protocol.h	/^wl_data_device_get_version(struct wl_data_device *wl_data_device)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_data_device * wl_data_device)
wl_data_device_listener	/usr/include/wayland-client-protocol.h	/^struct wl_data_device_listener {$/;"	s
wl_data_device_manager_create_data_source	/usr/include/wayland-client-protocol.h	/^wl_data_device_manager_create_data_source(struct wl_data_device_manager *wl_data_device_manager)$/;"	f	typeref:struct:wl_data_source *	signature:(struct wl_data_device_manager * wl_data_device_manager)
wl_data_device_manager_destroy	/usr/include/wayland-client-protocol.h	/^wl_data_device_manager_destroy(struct wl_data_device_manager *wl_data_device_manager)$/;"	f	typeref:typename:void	signature:(struct wl_data_device_manager * wl_data_device_manager)
wl_data_device_manager_dnd_action	/usr/include/wayland-client-protocol.h	/^enum wl_data_device_manager_dnd_action {$/;"	g
wl_data_device_manager_get_data_device	/usr/include/wayland-client-protocol.h	/^wl_data_device_manager_get_data_device(struct wl_data_device_manager *wl_data_device_manager, st/;"	f	typeref:struct:wl_data_device *	signature:(struct wl_data_device_manager * wl_data_device_manager,struct wl_seat * seat)
wl_data_device_manager_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_device_manager_get_user_data(struct wl_data_device_manager *wl_data_device_manager)$/;"	f	typeref:typename:void *	signature:(struct wl_data_device_manager * wl_data_device_manager)
wl_data_device_manager_get_version	/usr/include/wayland-client-protocol.h	/^wl_data_device_manager_get_version(struct wl_data_device_manager *wl_data_device_manager)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_data_device_manager * wl_data_device_manager)
wl_data_device_manager_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_device_manager_set_user_data(struct wl_data_device_manager *wl_data_device_manager, void/;"	f	typeref:typename:void	signature:(struct wl_data_device_manager * wl_data_device_manager,void * user_data)
wl_data_device_release	/usr/include/wayland-client-protocol.h	/^wl_data_device_release(struct wl_data_device *wl_data_device)$/;"	f	typeref:typename:void	signature:(struct wl_data_device * wl_data_device)
wl_data_device_set_selection	/usr/include/wayland-client-protocol.h	/^wl_data_device_set_selection(struct wl_data_device *wl_data_device, struct wl_data_source *sourc/;"	f	typeref:typename:void	signature:(struct wl_data_device * wl_data_device,struct wl_data_source * source,uint32_t serial)
wl_data_device_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_device_set_user_data(struct wl_data_device *wl_data_device, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_data_device * wl_data_device,void * user_data)
wl_data_device_start_drag	/usr/include/wayland-client-protocol.h	/^wl_data_device_start_drag(struct wl_data_device *wl_data_device, struct wl_data_source *source, /;"	f	typeref:typename:void	signature:(struct wl_data_device * wl_data_device,struct wl_data_source * source,struct wl_surface * origin,struct wl_surface * icon,uint32_t serial)
wl_data_offer_accept	/usr/include/wayland-client-protocol.h	/^wl_data_offer_accept(struct wl_data_offer *wl_data_offer, uint32_t serial, const char *mime_type/;"	f	typeref:typename:void	signature:(struct wl_data_offer * wl_data_offer,uint32_t serial,const char * mime_type)
wl_data_offer_add_listener	/usr/include/wayland-client-protocol.h	/^wl_data_offer_add_listener(struct wl_data_offer *wl_data_offer,$/;"	f	typeref:typename:int	signature:(struct wl_data_offer * wl_data_offer,const struct wl_data_offer_listener * listener,void * data)
wl_data_offer_destroy	/usr/include/wayland-client-protocol.h	/^wl_data_offer_destroy(struct wl_data_offer *wl_data_offer)$/;"	f	typeref:typename:void	signature:(struct wl_data_offer * wl_data_offer)
wl_data_offer_error	/usr/include/wayland-client-protocol.h	/^enum wl_data_offer_error {$/;"	g
wl_data_offer_finish	/usr/include/wayland-client-protocol.h	/^wl_data_offer_finish(struct wl_data_offer *wl_data_offer)$/;"	f	typeref:typename:void	signature:(struct wl_data_offer * wl_data_offer)
wl_data_offer_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_offer_get_user_data(struct wl_data_offer *wl_data_offer)$/;"	f	typeref:typename:void *	signature:(struct wl_data_offer * wl_data_offer)
wl_data_offer_get_version	/usr/include/wayland-client-protocol.h	/^wl_data_offer_get_version(struct wl_data_offer *wl_data_offer)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_data_offer * wl_data_offer)
wl_data_offer_listener	/usr/include/wayland-client-protocol.h	/^struct wl_data_offer_listener {$/;"	s
wl_data_offer_receive	/usr/include/wayland-client-protocol.h	/^wl_data_offer_receive(struct wl_data_offer *wl_data_offer, const char *mime_type, int32_t fd)$/;"	f	typeref:typename:void	signature:(struct wl_data_offer * wl_data_offer,const char * mime_type,int32_t fd)
wl_data_offer_set_actions	/usr/include/wayland-client-protocol.h	/^wl_data_offer_set_actions(struct wl_data_offer *wl_data_offer, uint32_t dnd_actions, uint32_t pr/;"	f	typeref:typename:void	signature:(struct wl_data_offer * wl_data_offer,uint32_t dnd_actions,uint32_t preferred_action)
wl_data_offer_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_offer_set_user_data(struct wl_data_offer *wl_data_offer, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_data_offer * wl_data_offer,void * user_data)
wl_data_source_add_listener	/usr/include/wayland-client-protocol.h	/^wl_data_source_add_listener(struct wl_data_source *wl_data_source,$/;"	f	typeref:typename:int	signature:(struct wl_data_source * wl_data_source,const struct wl_data_source_listener * listener,void * data)
wl_data_source_destroy	/usr/include/wayland-client-protocol.h	/^wl_data_source_destroy(struct wl_data_source *wl_data_source)$/;"	f	typeref:typename:void	signature:(struct wl_data_source * wl_data_source)
wl_data_source_error	/usr/include/wayland-client-protocol.h	/^enum wl_data_source_error {$/;"	g
wl_data_source_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_source_get_user_data(struct wl_data_source *wl_data_source)$/;"	f	typeref:typename:void *	signature:(struct wl_data_source * wl_data_source)
wl_data_source_get_version	/usr/include/wayland-client-protocol.h	/^wl_data_source_get_version(struct wl_data_source *wl_data_source)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_data_source * wl_data_source)
wl_data_source_listener	/usr/include/wayland-client-protocol.h	/^struct wl_data_source_listener {$/;"	s
wl_data_source_offer	/usr/include/wayland-client-protocol.h	/^wl_data_source_offer(struct wl_data_source *wl_data_source, const char *mime_type)$/;"	f	typeref:typename:void	signature:(struct wl_data_source * wl_data_source,const char * mime_type)
wl_data_source_set_actions	/usr/include/wayland-client-protocol.h	/^wl_data_source_set_actions(struct wl_data_source *wl_data_source, uint32_t dnd_actions)$/;"	f	typeref:typename:void	signature:(struct wl_data_source * wl_data_source,uint32_t dnd_actions)
wl_data_source_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_data_source_set_user_data(struct wl_data_source *wl_data_source, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_data_source * wl_data_source,void * user_data)
wl_display_add_listener	/usr/include/wayland-client-protocol.h	/^wl_display_add_listener(struct wl_display *wl_display,$/;"	f	typeref:typename:int	signature:(struct wl_display * wl_display,const struct wl_display_listener * listener,void * data)
wl_display_error	/usr/include/wayland-client-protocol.h	/^enum wl_display_error {$/;"	g
wl_display_get_registry	/usr/include/wayland-client-protocol.h	/^wl_display_get_registry(struct wl_display *wl_display)$/;"	f	typeref:struct:wl_registry *	signature:(struct wl_display * wl_display)
wl_display_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_display_get_user_data(struct wl_display *wl_display)$/;"	f	typeref:typename:void *	signature:(struct wl_display * wl_display)
wl_display_get_version	/usr/include/wayland-client-protocol.h	/^wl_display_get_version(struct wl_display *wl_display)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_display * wl_display)
wl_display_listener	/usr/include/wayland-client-protocol.h	/^struct wl_display_listener {$/;"	s
wl_display_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_display_set_user_data(struct wl_display *wl_display, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_display * wl_display,void * user_data)
wl_display_sync	/usr/include/wayland-client-protocol.h	/^wl_display_sync(struct wl_display *wl_display)$/;"	f	typeref:struct:wl_callback *	signature:(struct wl_display * wl_display)
wl_keyboard_add_listener	/usr/include/wayland-client-protocol.h	/^wl_keyboard_add_listener(struct wl_keyboard *wl_keyboard,$/;"	f	typeref:typename:int	signature:(struct wl_keyboard * wl_keyboard,const struct wl_keyboard_listener * listener,void * data)
wl_keyboard_destroy	/usr/include/wayland-client-protocol.h	/^wl_keyboard_destroy(struct wl_keyboard *wl_keyboard)$/;"	f	typeref:typename:void	signature:(struct wl_keyboard * wl_keyboard)
wl_keyboard_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_keyboard_get_user_data(struct wl_keyboard *wl_keyboard)$/;"	f	typeref:typename:void *	signature:(struct wl_keyboard * wl_keyboard)
wl_keyboard_get_version	/usr/include/wayland-client-protocol.h	/^wl_keyboard_get_version(struct wl_keyboard *wl_keyboard)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_keyboard * wl_keyboard)
wl_keyboard_key_state	/usr/include/wayland-client-protocol.h	/^enum wl_keyboard_key_state {$/;"	g
wl_keyboard_keymap_format	/usr/include/wayland-client-protocol.h	/^enum wl_keyboard_keymap_format {$/;"	g
wl_keyboard_listener	/usr/include/wayland-client-protocol.h	/^struct wl_keyboard_listener {$/;"	s
wl_keyboard_release	/usr/include/wayland-client-protocol.h	/^wl_keyboard_release(struct wl_keyboard *wl_keyboard)$/;"	f	typeref:typename:void	signature:(struct wl_keyboard * wl_keyboard)
wl_keyboard_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_keyboard_set_user_data(struct wl_keyboard *wl_keyboard, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_keyboard * wl_keyboard,void * user_data)
wl_output_add_listener	/usr/include/wayland-client-protocol.h	/^wl_output_add_listener(struct wl_output *wl_output,$/;"	f	typeref:typename:int	signature:(struct wl_output * wl_output,const struct wl_output_listener * listener,void * data)
wl_output_destroy	/usr/include/wayland-client-protocol.h	/^wl_output_destroy(struct wl_output *wl_output)$/;"	f	typeref:typename:void	signature:(struct wl_output * wl_output)
wl_output_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_output_get_user_data(struct wl_output *wl_output)$/;"	f	typeref:typename:void *	signature:(struct wl_output * wl_output)
wl_output_get_version	/usr/include/wayland-client-protocol.h	/^wl_output_get_version(struct wl_output *wl_output)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_output * wl_output)
wl_output_listener	/usr/include/wayland-client-protocol.h	/^struct wl_output_listener {$/;"	s
wl_output_mode	/usr/include/wayland-client-protocol.h	/^enum wl_output_mode {$/;"	g
wl_output_release	/usr/include/wayland-client-protocol.h	/^wl_output_release(struct wl_output *wl_output)$/;"	f	typeref:typename:void	signature:(struct wl_output * wl_output)
wl_output_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_output_set_user_data(struct wl_output *wl_output, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_output * wl_output,void * user_data)
wl_output_subpixel	/usr/include/wayland-client-protocol.h	/^enum wl_output_subpixel {$/;"	g
wl_output_transform	/usr/include/wayland-client-protocol.h	/^enum wl_output_transform {$/;"	g
wl_pointer_add_listener	/usr/include/wayland-client-protocol.h	/^wl_pointer_add_listener(struct wl_pointer *wl_pointer,$/;"	f	typeref:typename:int	signature:(struct wl_pointer * wl_pointer,const struct wl_pointer_listener * listener,void * data)
wl_pointer_axis	/usr/include/wayland-client-protocol.h	/^enum wl_pointer_axis {$/;"	g
wl_pointer_axis_relative_direction	/usr/include/wayland-client-protocol.h	/^enum wl_pointer_axis_relative_direction {$/;"	g
wl_pointer_axis_source	/usr/include/wayland-client-protocol.h	/^enum wl_pointer_axis_source {$/;"	g
wl_pointer_button_state	/usr/include/wayland-client-protocol.h	/^enum wl_pointer_button_state {$/;"	g
wl_pointer_destroy	/usr/include/wayland-client-protocol.h	/^wl_pointer_destroy(struct wl_pointer *wl_pointer)$/;"	f	typeref:typename:void	signature:(struct wl_pointer * wl_pointer)
wl_pointer_error	/usr/include/wayland-client-protocol.h	/^enum wl_pointer_error {$/;"	g
wl_pointer_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_pointer_get_user_data(struct wl_pointer *wl_pointer)$/;"	f	typeref:typename:void *	signature:(struct wl_pointer * wl_pointer)
wl_pointer_get_version	/usr/include/wayland-client-protocol.h	/^wl_pointer_get_version(struct wl_pointer *wl_pointer)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_pointer * wl_pointer)
wl_pointer_listener	/usr/include/wayland-client-protocol.h	/^struct wl_pointer_listener {$/;"	s
wl_pointer_release	/usr/include/wayland-client-protocol.h	/^wl_pointer_release(struct wl_pointer *wl_pointer)$/;"	f	typeref:typename:void	signature:(struct wl_pointer * wl_pointer)
wl_pointer_set_cursor	/usr/include/wayland-client-protocol.h	/^wl_pointer_set_cursor(struct wl_pointer *wl_pointer, uint32_t serial, struct wl_surface *surface/;"	f	typeref:typename:void	signature:(struct wl_pointer * wl_pointer,uint32_t serial,struct wl_surface * surface,int32_t hotspot_x,int32_t hotspot_y)
wl_pointer_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_pointer_set_user_data(struct wl_pointer *wl_pointer, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_pointer * wl_pointer,void * user_data)
wl_region_add	/usr/include/wayland-client-protocol.h	/^wl_region_add(struct wl_region *wl_region, int32_t x, int32_t y, int32_t width, int32_t height)$/;"	f	typeref:typename:void	signature:(struct wl_region * wl_region,int32_t x,int32_t y,int32_t width,int32_t height)
wl_region_destroy	/usr/include/wayland-client-protocol.h	/^wl_region_destroy(struct wl_region *wl_region)$/;"	f	typeref:typename:void	signature:(struct wl_region * wl_region)
wl_region_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_region_get_user_data(struct wl_region *wl_region)$/;"	f	typeref:typename:void *	signature:(struct wl_region * wl_region)
wl_region_get_version	/usr/include/wayland-client-protocol.h	/^wl_region_get_version(struct wl_region *wl_region)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_region * wl_region)
wl_region_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_region_set_user_data(struct wl_region *wl_region, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_region * wl_region,void * user_data)
wl_region_subtract	/usr/include/wayland-client-protocol.h	/^wl_region_subtract(struct wl_region *wl_region, int32_t x, int32_t y, int32_t width, int32_t hei/;"	f	typeref:typename:void	signature:(struct wl_region * wl_region,int32_t x,int32_t y,int32_t width,int32_t height)
wl_registry_add_listener	/usr/include/wayland-client-protocol.h	/^wl_registry_add_listener(struct wl_registry *wl_registry,$/;"	f	typeref:typename:int	signature:(struct wl_registry * wl_registry,const struct wl_registry_listener * listener,void * data)
wl_registry_bind	/usr/include/wayland-client-protocol.h	/^wl_registry_bind(struct wl_registry *wl_registry, uint32_t name, const struct wl_interface *inte/;"	f	typeref:typename:void *	signature:(struct wl_registry * wl_registry,uint32_t name,const struct wl_interface * interface,uint32_t version)
wl_registry_destroy	/usr/include/wayland-client-protocol.h	/^wl_registry_destroy(struct wl_registry *wl_registry)$/;"	f	typeref:typename:void	signature:(struct wl_registry * wl_registry)
wl_registry_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_registry_get_user_data(struct wl_registry *wl_registry)$/;"	f	typeref:typename:void *	signature:(struct wl_registry * wl_registry)
wl_registry_get_version	/usr/include/wayland-client-protocol.h	/^wl_registry_get_version(struct wl_registry *wl_registry)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_registry * wl_registry)
wl_registry_listener	/usr/include/wayland-client-protocol.h	/^struct wl_registry_listener {$/;"	s
wl_registry_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_registry_set_user_data(struct wl_registry *wl_registry, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_registry * wl_registry,void * user_data)
wl_seat_add_listener	/usr/include/wayland-client-protocol.h	/^wl_seat_add_listener(struct wl_seat *wl_seat,$/;"	f	typeref:typename:int	signature:(struct wl_seat * wl_seat,const struct wl_seat_listener * listener,void * data)
wl_seat_capability	/usr/include/wayland-client-protocol.h	/^enum wl_seat_capability {$/;"	g
wl_seat_destroy	/usr/include/wayland-client-protocol.h	/^wl_seat_destroy(struct wl_seat *wl_seat)$/;"	f	typeref:typename:void	signature:(struct wl_seat * wl_seat)
wl_seat_error	/usr/include/wayland-client-protocol.h	/^enum wl_seat_error {$/;"	g
wl_seat_get_keyboard	/usr/include/wayland-client-protocol.h	/^wl_seat_get_keyboard(struct wl_seat *wl_seat)$/;"	f	typeref:struct:wl_keyboard *	signature:(struct wl_seat * wl_seat)
wl_seat_get_pointer	/usr/include/wayland-client-protocol.h	/^wl_seat_get_pointer(struct wl_seat *wl_seat)$/;"	f	typeref:struct:wl_pointer *	signature:(struct wl_seat * wl_seat)
wl_seat_get_touch	/usr/include/wayland-client-protocol.h	/^wl_seat_get_touch(struct wl_seat *wl_seat)$/;"	f	typeref:struct:wl_touch *	signature:(struct wl_seat * wl_seat)
wl_seat_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_seat_get_user_data(struct wl_seat *wl_seat)$/;"	f	typeref:typename:void *	signature:(struct wl_seat * wl_seat)
wl_seat_get_version	/usr/include/wayland-client-protocol.h	/^wl_seat_get_version(struct wl_seat *wl_seat)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_seat * wl_seat)
wl_seat_listener	/usr/include/wayland-client-protocol.h	/^struct wl_seat_listener {$/;"	s
wl_seat_release	/usr/include/wayland-client-protocol.h	/^wl_seat_release(struct wl_seat *wl_seat)$/;"	f	typeref:typename:void	signature:(struct wl_seat * wl_seat)
wl_seat_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_seat_set_user_data(struct wl_seat *wl_seat, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_seat * wl_seat,void * user_data)
wl_shell_destroy	/usr/include/wayland-client-protocol.h	/^wl_shell_destroy(struct wl_shell *wl_shell)$/;"	f	typeref:typename:void	signature:(struct wl_shell * wl_shell)
wl_shell_error	/usr/include/wayland-client-protocol.h	/^enum wl_shell_error {$/;"	g
wl_shell_get_shell_surface	/usr/include/wayland-client-protocol.h	/^wl_shell_get_shell_surface(struct wl_shell *wl_shell, struct wl_surface *surface)$/;"	f	typeref:struct:wl_shell_surface *	signature:(struct wl_shell * wl_shell,struct wl_surface * surface)
wl_shell_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_shell_get_user_data(struct wl_shell *wl_shell)$/;"	f	typeref:typename:void *	signature:(struct wl_shell * wl_shell)
wl_shell_get_version	/usr/include/wayland-client-protocol.h	/^wl_shell_get_version(struct wl_shell *wl_shell)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_shell * wl_shell)
wl_shell_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_shell_set_user_data(struct wl_shell *wl_shell, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_shell * wl_shell,void * user_data)
wl_shell_surface_add_listener	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_add_listener(struct wl_shell_surface *wl_shell_surface,$/;"	f	typeref:typename:int	signature:(struct wl_shell_surface * wl_shell_surface,const struct wl_shell_surface_listener * listener,void * data)
wl_shell_surface_destroy	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_destroy(struct wl_shell_surface *wl_shell_surface)$/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface)
wl_shell_surface_fullscreen_method	/usr/include/wayland-client-protocol.h	/^enum wl_shell_surface_fullscreen_method {$/;"	g
wl_shell_surface_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_get_user_data(struct wl_shell_surface *wl_shell_surface)$/;"	f	typeref:typename:void *	signature:(struct wl_shell_surface * wl_shell_surface)
wl_shell_surface_get_version	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_get_version(struct wl_shell_surface *wl_shell_surface)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_shell_surface * wl_shell_surface)
wl_shell_surface_listener	/usr/include/wayland-client-protocol.h	/^struct wl_shell_surface_listener {$/;"	s
wl_shell_surface_move	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_move(struct wl_shell_surface *wl_shell_surface, struct wl_seat *seat, uint32_t /;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,struct wl_seat * seat,uint32_t serial)
wl_shell_surface_pong	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_pong(struct wl_shell_surface *wl_shell_surface, uint32_t serial)$/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,uint32_t serial)
wl_shell_surface_resize	/usr/include/wayland-client-protocol.h	/^enum wl_shell_surface_resize {$/;"	g
wl_shell_surface_resize	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_resize(struct wl_shell_surface *wl_shell_surface, struct wl_seat *seat, uint32_/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,struct wl_seat * seat,uint32_t serial,uint32_t edges)
wl_shell_surface_set_class	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_class(struct wl_shell_surface *wl_shell_surface, const char *class_)$/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,const char * class_)
wl_shell_surface_set_fullscreen	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_fullscreen(struct wl_shell_surface *wl_shell_surface, uint32_t method, uint/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,uint32_t method,uint32_t framerate,struct wl_output * output)
wl_shell_surface_set_maximized	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_maximized(struct wl_shell_surface *wl_shell_surface, struct wl_output *outp/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,struct wl_output * output)
wl_shell_surface_set_popup	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_popup(struct wl_shell_surface *wl_shell_surface, struct wl_seat *seat, uint/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,struct wl_seat * seat,uint32_t serial,struct wl_surface * parent,int32_t x,int32_t y,uint32_t flags)
wl_shell_surface_set_title	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_title(struct wl_shell_surface *wl_shell_surface, const char *title)$/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,const char * title)
wl_shell_surface_set_toplevel	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_toplevel(struct wl_shell_surface *wl_shell_surface)$/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface)
wl_shell_surface_set_transient	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_transient(struct wl_shell_surface *wl_shell_surface, struct wl_surface *par/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,struct wl_surface * parent,int32_t x,int32_t y,uint32_t flags)
wl_shell_surface_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_shell_surface_set_user_data(struct wl_shell_surface *wl_shell_surface, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_shell_surface * wl_shell_surface,void * user_data)
wl_shell_surface_transient	/usr/include/wayland-client-protocol.h	/^enum wl_shell_surface_transient {$/;"	g
wl_shm_add_listener	/usr/include/wayland-client-protocol.h	/^wl_shm_add_listener(struct wl_shm *wl_shm,$/;"	f	typeref:typename:int	signature:(struct wl_shm * wl_shm,const struct wl_shm_listener * listener,void * data)
wl_shm_create_pool	/usr/include/wayland-client-protocol.h	/^wl_shm_create_pool(struct wl_shm *wl_shm, int32_t fd, int32_t size)$/;"	f	typeref:struct:wl_shm_pool *	signature:(struct wl_shm * wl_shm,int32_t fd,int32_t size)
wl_shm_destroy	/usr/include/wayland-client-protocol.h	/^wl_shm_destroy(struct wl_shm *wl_shm)$/;"	f	typeref:typename:void	signature:(struct wl_shm * wl_shm)
wl_shm_error	/usr/include/wayland-client-protocol.h	/^enum wl_shm_error {$/;"	g
wl_shm_format	/usr/include/wayland-client-protocol.h	/^enum wl_shm_format {$/;"	g
wl_shm_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_shm_get_user_data(struct wl_shm *wl_shm)$/;"	f	typeref:typename:void *	signature:(struct wl_shm * wl_shm)
wl_shm_get_version	/usr/include/wayland-client-protocol.h	/^wl_shm_get_version(struct wl_shm *wl_shm)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_shm * wl_shm)
wl_shm_listener	/usr/include/wayland-client-protocol.h	/^struct wl_shm_listener {$/;"	s
wl_shm_pool_create_buffer	/usr/include/wayland-client-protocol.h	/^wl_shm_pool_create_buffer(struct wl_shm_pool *wl_shm_pool, int32_t offset, int32_t width, int32_/;"	f	typeref:struct:wl_buffer *	signature:(struct wl_shm_pool * wl_shm_pool,int32_t offset,int32_t width,int32_t height,int32_t stride,uint32_t format)
wl_shm_pool_destroy	/usr/include/wayland-client-protocol.h	/^wl_shm_pool_destroy(struct wl_shm_pool *wl_shm_pool)$/;"	f	typeref:typename:void	signature:(struct wl_shm_pool * wl_shm_pool)
wl_shm_pool_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_shm_pool_get_user_data(struct wl_shm_pool *wl_shm_pool)$/;"	f	typeref:typename:void *	signature:(struct wl_shm_pool * wl_shm_pool)
wl_shm_pool_get_version	/usr/include/wayland-client-protocol.h	/^wl_shm_pool_get_version(struct wl_shm_pool *wl_shm_pool)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_shm_pool * wl_shm_pool)
wl_shm_pool_resize	/usr/include/wayland-client-protocol.h	/^wl_shm_pool_resize(struct wl_shm_pool *wl_shm_pool, int32_t size)$/;"	f	typeref:typename:void	signature:(struct wl_shm_pool * wl_shm_pool,int32_t size)
wl_shm_pool_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_shm_pool_set_user_data(struct wl_shm_pool *wl_shm_pool, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_shm_pool * wl_shm_pool,void * user_data)
wl_shm_release	/usr/include/wayland-client-protocol.h	/^wl_shm_release(struct wl_shm *wl_shm)$/;"	f	typeref:typename:void	signature:(struct wl_shm * wl_shm)
wl_shm_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_shm_set_user_data(struct wl_shm *wl_shm, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_shm * wl_shm,void * user_data)
wl_subcompositor_destroy	/usr/include/wayland-client-protocol.h	/^wl_subcompositor_destroy(struct wl_subcompositor *wl_subcompositor)$/;"	f	typeref:typename:void	signature:(struct wl_subcompositor * wl_subcompositor)
wl_subcompositor_error	/usr/include/wayland-client-protocol.h	/^enum wl_subcompositor_error {$/;"	g
wl_subcompositor_get_subsurface	/usr/include/wayland-client-protocol.h	/^wl_subcompositor_get_subsurface(struct wl_subcompositor *wl_subcompositor, struct wl_surface *su/;"	f	typeref:struct:wl_subsurface *	signature:(struct wl_subcompositor * wl_subcompositor,struct wl_surface * surface,struct wl_surface * parent)
wl_subcompositor_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_subcompositor_get_user_data(struct wl_subcompositor *wl_subcompositor)$/;"	f	typeref:typename:void *	signature:(struct wl_subcompositor * wl_subcompositor)
wl_subcompositor_get_version	/usr/include/wayland-client-protocol.h	/^wl_subcompositor_get_version(struct wl_subcompositor *wl_subcompositor)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_subcompositor * wl_subcompositor)
wl_subcompositor_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_subcompositor_set_user_data(struct wl_subcompositor *wl_subcompositor, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_subcompositor * wl_subcompositor,void * user_data)
wl_subsurface_destroy	/usr/include/wayland-client-protocol.h	/^wl_subsurface_destroy(struct wl_subsurface *wl_subsurface)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface)
wl_subsurface_error	/usr/include/wayland-client-protocol.h	/^enum wl_subsurface_error {$/;"	g
wl_subsurface_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_subsurface_get_user_data(struct wl_subsurface *wl_subsurface)$/;"	f	typeref:typename:void *	signature:(struct wl_subsurface * wl_subsurface)
wl_subsurface_get_version	/usr/include/wayland-client-protocol.h	/^wl_subsurface_get_version(struct wl_subsurface *wl_subsurface)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_subsurface * wl_subsurface)
wl_subsurface_place_above	/usr/include/wayland-client-protocol.h	/^wl_subsurface_place_above(struct wl_subsurface *wl_subsurface, struct wl_surface *sibling)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface,struct wl_surface * sibling)
wl_subsurface_place_below	/usr/include/wayland-client-protocol.h	/^wl_subsurface_place_below(struct wl_subsurface *wl_subsurface, struct wl_surface *sibling)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface,struct wl_surface * sibling)
wl_subsurface_set_desync	/usr/include/wayland-client-protocol.h	/^wl_subsurface_set_desync(struct wl_subsurface *wl_subsurface)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface)
wl_subsurface_set_position	/usr/include/wayland-client-protocol.h	/^wl_subsurface_set_position(struct wl_subsurface *wl_subsurface, int32_t x, int32_t y)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface,int32_t x,int32_t y)
wl_subsurface_set_sync	/usr/include/wayland-client-protocol.h	/^wl_subsurface_set_sync(struct wl_subsurface *wl_subsurface)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface)
wl_subsurface_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_subsurface_set_user_data(struct wl_subsurface *wl_subsurface, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_subsurface * wl_subsurface,void * user_data)
wl_surface_add_listener	/usr/include/wayland-client-protocol.h	/^wl_surface_add_listener(struct wl_surface *wl_surface,$/;"	f	typeref:typename:int	signature:(struct wl_surface * wl_surface,const struct wl_surface_listener * listener,void * data)
wl_surface_attach	/usr/include/wayland-client-protocol.h	/^wl_surface_attach(struct wl_surface *wl_surface, struct wl_buffer *buffer, int32_t x, int32_t y)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,struct wl_buffer * buffer,int32_t x,int32_t y)
wl_surface_commit	/usr/include/wayland-client-protocol.h	/^wl_surface_commit(struct wl_surface *wl_surface)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface)
wl_surface_damage	/usr/include/wayland-client-protocol.h	/^wl_surface_damage(struct wl_surface *wl_surface, int32_t x, int32_t y, int32_t width, int32_t he/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,int32_t x,int32_t y,int32_t width,int32_t height)
wl_surface_damage_buffer	/usr/include/wayland-client-protocol.h	/^wl_surface_damage_buffer(struct wl_surface *wl_surface, int32_t x, int32_t y, int32_t width, int/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,int32_t x,int32_t y,int32_t width,int32_t height)
wl_surface_destroy	/usr/include/wayland-client-protocol.h	/^wl_surface_destroy(struct wl_surface *wl_surface)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface)
wl_surface_error	/usr/include/wayland-client-protocol.h	/^enum wl_surface_error {$/;"	g
wl_surface_frame	/usr/include/wayland-client-protocol.h	/^wl_surface_frame(struct wl_surface *wl_surface)$/;"	f	typeref:struct:wl_callback *	signature:(struct wl_surface * wl_surface)
wl_surface_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_surface_get_user_data(struct wl_surface *wl_surface)$/;"	f	typeref:typename:void *	signature:(struct wl_surface * wl_surface)
wl_surface_get_version	/usr/include/wayland-client-protocol.h	/^wl_surface_get_version(struct wl_surface *wl_surface)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_surface * wl_surface)
wl_surface_listener	/usr/include/wayland-client-protocol.h	/^struct wl_surface_listener {$/;"	s
wl_surface_offset	/usr/include/wayland-client-protocol.h	/^wl_surface_offset(struct wl_surface *wl_surface, int32_t x, int32_t y)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,int32_t x,int32_t y)
wl_surface_set_buffer_scale	/usr/include/wayland-client-protocol.h	/^wl_surface_set_buffer_scale(struct wl_surface *wl_surface, int32_t scale)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,int32_t scale)
wl_surface_set_buffer_transform	/usr/include/wayland-client-protocol.h	/^wl_surface_set_buffer_transform(struct wl_surface *wl_surface, int32_t transform)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,int32_t transform)
wl_surface_set_input_region	/usr/include/wayland-client-protocol.h	/^wl_surface_set_input_region(struct wl_surface *wl_surface, struct wl_region *region)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,struct wl_region * region)
wl_surface_set_opaque_region	/usr/include/wayland-client-protocol.h	/^wl_surface_set_opaque_region(struct wl_surface *wl_surface, struct wl_region *region)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,struct wl_region * region)
wl_surface_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_surface_set_user_data(struct wl_surface *wl_surface, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_surface * wl_surface,void * user_data)
wl_touch_add_listener	/usr/include/wayland-client-protocol.h	/^wl_touch_add_listener(struct wl_touch *wl_touch,$/;"	f	typeref:typename:int	signature:(struct wl_touch * wl_touch,const struct wl_touch_listener * listener,void * data)
wl_touch_destroy	/usr/include/wayland-client-protocol.h	/^wl_touch_destroy(struct wl_touch *wl_touch)$/;"	f	typeref:typename:void	signature:(struct wl_touch * wl_touch)
wl_touch_get_user_data	/usr/include/wayland-client-protocol.h	/^wl_touch_get_user_data(struct wl_touch *wl_touch)$/;"	f	typeref:typename:void *	signature:(struct wl_touch * wl_touch)
wl_touch_get_version	/usr/include/wayland-client-protocol.h	/^wl_touch_get_version(struct wl_touch *wl_touch)$/;"	f	typeref:typename:uint32_t	signature:(struct wl_touch * wl_touch)
wl_touch_listener	/usr/include/wayland-client-protocol.h	/^struct wl_touch_listener {$/;"	s
wl_touch_release	/usr/include/wayland-client-protocol.h	/^wl_touch_release(struct wl_touch *wl_touch)$/;"	f	typeref:typename:void	signature:(struct wl_touch * wl_touch)
wl_touch_set_user_data	/usr/include/wayland-client-protocol.h	/^wl_touch_set_user_data(struct wl_touch *wl_touch, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wl_touch * wl_touch,void * user_data)
wm_capabilities	build/protocol/xdg-shell-client-protocol.h	/^	void (*wm_capabilities)(void *data,$/;"	m	struct:xdg_toplevel_listener	typeref:typename:void (*)(void * data,struct xdg_toplevel * xdg_toplevel,struct wl_array * capabilities)	access:public
wp_content_type_manager_v1_destroy	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_manager_v1_destroy(struct wp_content_type_manager_v1 *wp_content_type_manager_v1/;"	f	typeref:typename:void	signature:(struct wp_content_type_manager_v1 * wp_content_type_manager_v1)
wp_content_type_manager_v1_error	build/protocol/content-type-v1-client-protocol.h	/^enum wp_content_type_manager_v1_error {$/;"	g
wp_content_type_manager_v1_get_surface_content_type	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_manager_v1_get_surface_content_type(struct wp_content_type_manager_v1 *wp_conten/;"	f	typeref:struct:wp_content_type_v1 *	signature:(struct wp_content_type_manager_v1 * wp_content_type_manager_v1,struct wl_surface * surface)
wp_content_type_manager_v1_get_user_data	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_manager_v1_get_user_data(struct wp_content_type_manager_v1 *wp_content_type_mana/;"	f	typeref:typename:void *	signature:(struct wp_content_type_manager_v1 * wp_content_type_manager_v1)
wp_content_type_manager_v1_get_version	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_manager_v1_get_version(struct wp_content_type_manager_v1 *wp_content_type_manage/;"	f	typeref:typename:uint32_t	signature:(struct wp_content_type_manager_v1 * wp_content_type_manager_v1)
wp_content_type_manager_v1_interface	build/protocol/content-type-v1-protocol.c	/^WL_PRIVATE const struct wl_interface wp_content_type_manager_v1_interface = {$/;"	v	typeref:typename:const struct wl_interface
wp_content_type_manager_v1_requests	build/protocol/content-type-v1-protocol.c	/^static const struct wl_message wp_content_type_manager_v1_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_content_type_manager_v1_set_user_data	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_manager_v1_set_user_data(struct wp_content_type_manager_v1 *wp_content_type_mana/;"	f	typeref:typename:void	signature:(struct wp_content_type_manager_v1 * wp_content_type_manager_v1,void * user_data)
wp_content_type_v1_destroy	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_v1_destroy(struct wp_content_type_v1 *wp_content_type_v1)$/;"	f	typeref:typename:void	signature:(struct wp_content_type_v1 * wp_content_type_v1)
wp_content_type_v1_get_user_data	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_v1_get_user_data(struct wp_content_type_v1 *wp_content_type_v1)$/;"	f	typeref:typename:void *	signature:(struct wp_content_type_v1 * wp_content_type_v1)
wp_content_type_v1_get_version	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_v1_get_version(struct wp_content_type_v1 *wp_content_type_v1)$/;"	f	typeref:typename:uint32_t	signature:(struct wp_content_type_v1 * wp_content_type_v1)
wp_content_type_v1_interface	build/protocol/content-type-v1-protocol.c	/^WL_PRIVATE const struct wl_interface wp_content_type_v1_interface = {$/;"	v	typeref:typename:const struct wl_interface
wp_content_type_v1_requests	build/protocol/content-type-v1-protocol.c	/^static const struct wl_message wp_content_type_v1_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_content_type_v1_set_content_type	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_v1_set_content_type(struct wp_content_type_v1 *wp_content_type_v1, uint32_t cont/;"	f	typeref:typename:void	signature:(struct wp_content_type_v1 * wp_content_type_v1,uint32_t content_type)
wp_content_type_v1_set_user_data	build/protocol/content-type-v1-client-protocol.h	/^wp_content_type_v1_set_user_data(struct wp_content_type_v1 *wp_content_type_v1, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wp_content_type_v1 * wp_content_type_v1,void * user_data)
wp_content_type_v1_type	build/protocol/content-type-v1-client-protocol.h	/^enum wp_content_type_v1_type {$/;"	g
wp_presentation_add_listener	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_add_listener(struct wp_presentation *wp_presentation,$/;"	f	typeref:typename:int	signature:(struct wp_presentation * wp_presentation,const struct wp_presentation_listener * listener,void * data)
wp_presentation_destroy	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_destroy(struct wp_presentation *wp_presentation)$/;"	f	typeref:typename:void	signature:(struct wp_presentation * wp_presentation)
wp_presentation_error	build/protocol/presentation-time-client-protocol.h	/^enum wp_presentation_error {$/;"	g
wp_presentation_events	build/protocol/presentation-time-protocol.c	/^static const struct wl_message wp_presentation_events[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_presentation_feedback	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_feedback(struct wp_presentation *wp_presentation, struct wl_surface *surface)$/;"	f	typeref:struct:wp_presentation_feedback *	signature:(struct wp_presentation * wp_presentation,struct wl_surface * surface)
wp_presentation_feedback_add_listener	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_feedback_add_listener(struct wp_presentation_feedback *wp_presentation_feedback,$/;"	f	typeref:typename:int	signature:(struct wp_presentation_feedback * wp_presentation_feedback,const struct wp_presentation_feedback_listener * listener,void * data)
wp_presentation_feedback_destroy	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_feedback_destroy(struct wp_presentation_feedback *wp_presentation_feedback)$/;"	f	typeref:typename:void	signature:(struct wp_presentation_feedback * wp_presentation_feedback)
wp_presentation_feedback_events	build/protocol/presentation-time-protocol.c	/^static const struct wl_message wp_presentation_feedback_events[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_presentation_feedback_get_user_data	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_feedback_get_user_data(struct wp_presentation_feedback *wp_presentation_feedback/;"	f	typeref:typename:void *	signature:(struct wp_presentation_feedback * wp_presentation_feedback)
wp_presentation_feedback_get_version	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_feedback_get_version(struct wp_presentation_feedback *wp_presentation_feedback)$/;"	f	typeref:typename:uint32_t	signature:(struct wp_presentation_feedback * wp_presentation_feedback)
wp_presentation_feedback_interface	build/protocol/presentation-time-protocol.c	/^WL_PRIVATE const struct wl_interface wp_presentation_feedback_interface = {$/;"	v	typeref:typename:const struct wl_interface
wp_presentation_feedback_kind	build/protocol/presentation-time-client-protocol.h	/^enum wp_presentation_feedback_kind {$/;"	g
wp_presentation_feedback_listener	build/protocol/presentation-time-client-protocol.h	/^struct wp_presentation_feedback_listener {$/;"	s
wp_presentation_feedback_set_user_data	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_feedback_set_user_data(struct wp_presentation_feedback *wp_presentation_feedback/;"	f	typeref:typename:void	signature:(struct wp_presentation_feedback * wp_presentation_feedback,void * user_data)
wp_presentation_get_user_data	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_get_user_data(struct wp_presentation *wp_presentation)$/;"	f	typeref:typename:void *	signature:(struct wp_presentation * wp_presentation)
wp_presentation_get_version	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_get_version(struct wp_presentation *wp_presentation)$/;"	f	typeref:typename:uint32_t	signature:(struct wp_presentation * wp_presentation)
wp_presentation_interface	build/protocol/presentation-time-protocol.c	/^WL_PRIVATE const struct wl_interface wp_presentation_interface = {$/;"	v	typeref:typename:const struct wl_interface
wp_presentation_listener	build/protocol/presentation-time-client-protocol.h	/^struct wp_presentation_listener {$/;"	s
wp_presentation_requests	build/protocol/presentation-time-protocol.c	/^static const struct wl_message wp_presentation_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_presentation_set_user_data	build/protocol/presentation-time-client-protocol.h	/^wp_presentation_set_user_data(struct wp_presentation *wp_presentation, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wp_presentation * wp_presentation,void * user_data)
wp_viewport_destroy	build/protocol/viewporter-client-protocol.h	/^wp_viewport_destroy(struct wp_viewport *wp_viewport)$/;"	f	typeref:typename:void	signature:(struct wp_viewport * wp_viewport)
wp_viewport_error	build/protocol/viewporter-client-protocol.h	/^enum wp_viewport_error {$/;"	g
wp_viewport_get_user_data	build/protocol/viewporter-client-protocol.h	/^wp_viewport_get_user_data(struct wp_viewport *wp_viewport)$/;"	f	typeref:typename:void *	signature:(struct wp_viewport * wp_viewport)
wp_viewport_get_version	build/protocol/viewporter-client-protocol.h	/^wp_viewport_get_version(struct wp_viewport *wp_viewport)$/;"	f	typeref:typename:uint32_t	signature:(struct wp_viewport * wp_viewport)
wp_viewport_interface	build/protocol/viewporter-protocol.c	/^WL_PRIVATE const struct wl_interface wp_viewport_interface = {$/;"	v	typeref:typename:const struct wl_interface
wp_viewport_requests	build/protocol/viewporter-protocol.c	/^static const struct wl_message wp_viewport_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_viewport_set_destination	build/protocol/viewporter-client-protocol.h	/^wp_viewport_set_destination(struct wp_viewport *wp_viewport, int32_t width, int32_t height)$/;"	f	typeref:typename:void	signature:(struct wp_viewport * wp_viewport,int32_t width,int32_t height)
wp_viewport_set_source	build/protocol/viewporter-client-protocol.h	/^wp_viewport_set_source(struct wp_viewport *wp_viewport, wl_fixed_t x, wl_fixed_t y, wl_fixed_t w/;"	f	typeref:typename:void	signature:(struct wp_viewport * wp_viewport,wl_fixed_t x,wl_fixed_t y,wl_fixed_t width,wl_fixed_t height)
wp_viewport_set_user_data	build/protocol/viewporter-client-protocol.h	/^wp_viewport_set_user_data(struct wp_viewport *wp_viewport, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wp_viewport * wp_viewport,void * user_data)
wp_viewporter_destroy	build/protocol/viewporter-client-protocol.h	/^wp_viewporter_destroy(struct wp_viewporter *wp_viewporter)$/;"	f	typeref:typename:void	signature:(struct wp_viewporter * wp_viewporter)
wp_viewporter_error	build/protocol/viewporter-client-protocol.h	/^enum wp_viewporter_error {$/;"	g
wp_viewporter_get_user_data	build/protocol/viewporter-client-protocol.h	/^wp_viewporter_get_user_data(struct wp_viewporter *wp_viewporter)$/;"	f	typeref:typename:void *	signature:(struct wp_viewporter * wp_viewporter)
wp_viewporter_get_version	build/protocol/viewporter-client-protocol.h	/^wp_viewporter_get_version(struct wp_viewporter *wp_viewporter)$/;"	f	typeref:typename:uint32_t	signature:(struct wp_viewporter * wp_viewporter)
wp_viewporter_get_viewport	build/protocol/viewporter-client-protocol.h	/^wp_viewporter_get_viewport(struct wp_viewporter *wp_viewporter, struct wl_surface *surface)$/;"	f	typeref:struct:wp_viewport *	signature:(struct wp_viewporter * wp_viewporter,struct wl_surface * surface)
wp_viewporter_interface	build/protocol/viewporter-protocol.c	/^WL_PRIVATE const struct wl_interface wp_viewporter_interface = {$/;"	v	typeref:typename:const struct wl_interface
wp_viewporter_requests	build/protocol/viewporter-protocol.c	/^static const struct wl_message wp_viewporter_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
wp_viewporter_set_user_data	build/protocol/viewporter-client-protocol.h	/^wp_viewporter_set_user_data(struct wp_viewporter *wp_viewporter, void *user_data)$/;"	f	typeref:typename:void	signature:(struct wp_viewporter * wp_viewporter,void * user_data)
xdg_popup_add_listener	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_add_listener(struct xdg_popup *xdg_popup,$/;"	f	typeref:typename:int	signature:(struct xdg_popup * xdg_popup,const struct xdg_popup_listener * listener,void * data)
xdg_popup_destroy	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_destroy(struct xdg_popup *xdg_popup)$/;"	f	typeref:typename:void	signature:(struct xdg_popup * xdg_popup)
xdg_popup_error	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_popup_error {$/;"	g
xdg_popup_events	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_popup_events[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_popup_get_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_get_user_data(struct xdg_popup *xdg_popup)$/;"	f	typeref:typename:void *	signature:(struct xdg_popup * xdg_popup)
xdg_popup_get_version	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_get_version(struct xdg_popup *xdg_popup)$/;"	f	typeref:typename:uint32_t	signature:(struct xdg_popup * xdg_popup)
xdg_popup_grab	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_grab(struct xdg_popup *xdg_popup, struct wl_seat *seat, uint32_t serial)$/;"	f	typeref:typename:void	signature:(struct xdg_popup * xdg_popup,struct wl_seat * seat,uint32_t serial)
xdg_popup_interface	build/protocol/xdg-shell-protocol.c	/^WL_PRIVATE const struct wl_interface xdg_popup_interface = {$/;"	v	typeref:typename:const struct wl_interface
xdg_popup_listener	build/protocol/xdg-shell-client-protocol.h	/^struct xdg_popup_listener {$/;"	s
xdg_popup_reposition	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_reposition(struct xdg_popup *xdg_popup, struct xdg_positioner *positioner, uint32_t to/;"	f	typeref:typename:void	signature:(struct xdg_popup * xdg_popup,struct xdg_positioner * positioner,uint32_t token)
xdg_popup_requests	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_popup_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_popup_set_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_popup_set_user_data(struct xdg_popup *xdg_popup, void *user_data)$/;"	f	typeref:typename:void	signature:(struct xdg_popup * xdg_popup,void * user_data)
xdg_positioner_anchor	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_positioner_anchor {$/;"	g
xdg_positioner_constraint_adjustment	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_positioner_constraint_adjustment {$/;"	g
xdg_positioner_destroy	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_destroy(struct xdg_positioner *xdg_positioner)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner)
xdg_positioner_error	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_positioner_error {$/;"	g
xdg_positioner_get_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_get_user_data(struct xdg_positioner *xdg_positioner)$/;"	f	typeref:typename:void *	signature:(struct xdg_positioner * xdg_positioner)
xdg_positioner_get_version	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_get_version(struct xdg_positioner *xdg_positioner)$/;"	f	typeref:typename:uint32_t	signature:(struct xdg_positioner * xdg_positioner)
xdg_positioner_gravity	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_positioner_gravity {$/;"	g
xdg_positioner_interface	build/protocol/xdg-shell-protocol.c	/^WL_PRIVATE const struct wl_interface xdg_positioner_interface = {$/;"	v	typeref:typename:const struct wl_interface
xdg_positioner_requests	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_positioner_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_positioner_set_anchor	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_anchor(struct xdg_positioner *xdg_positioner, uint32_t anchor)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,uint32_t anchor)
xdg_positioner_set_anchor_rect	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_anchor_rect(struct xdg_positioner *xdg_positioner, int32_t x, int32_t y, int3/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,int32_t x,int32_t y,int32_t width,int32_t height)
xdg_positioner_set_constraint_adjustment	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_constraint_adjustment(struct xdg_positioner *xdg_positioner, uint32_t constra/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,uint32_t constraint_adjustment)
xdg_positioner_set_gravity	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_gravity(struct xdg_positioner *xdg_positioner, uint32_t gravity)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,uint32_t gravity)
xdg_positioner_set_offset	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_offset(struct xdg_positioner *xdg_positioner, int32_t x, int32_t y)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,int32_t x,int32_t y)
xdg_positioner_set_parent_configure	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_parent_configure(struct xdg_positioner *xdg_positioner, uint32_t serial)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,uint32_t serial)
xdg_positioner_set_parent_size	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_parent_size(struct xdg_positioner *xdg_positioner, int32_t parent_width, int3/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,int32_t parent_width,int32_t parent_height)
xdg_positioner_set_reactive	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_reactive(struct xdg_positioner *xdg_positioner)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner)
xdg_positioner_set_size	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_size(struct xdg_positioner *xdg_positioner, int32_t width, int32_t height)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,int32_t width,int32_t height)
xdg_positioner_set_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_positioner_set_user_data(struct xdg_positioner *xdg_positioner, void *user_data)$/;"	f	typeref:typename:void	signature:(struct xdg_positioner * xdg_positioner,void * user_data)
xdg_shell_types	build/protocol/xdg-shell-protocol.c	/^static const struct wl_interface *xdg_shell_types[] = {$/;"	v	typeref:typename:const struct wl_interface * []	file:
xdg_surface_ack_configure	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_ack_configure(struct xdg_surface *xdg_surface, uint32_t serial)$/;"	f	typeref:typename:void	signature:(struct xdg_surface * xdg_surface,uint32_t serial)
xdg_surface_add_listener	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_add_listener(struct xdg_surface *xdg_surface,$/;"	f	typeref:typename:int	signature:(struct xdg_surface * xdg_surface,const struct xdg_surface_listener * listener,void * data)
xdg_surface_destroy	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_destroy(struct xdg_surface *xdg_surface)$/;"	f	typeref:typename:void	signature:(struct xdg_surface * xdg_surface)
xdg_surface_error	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_surface_error {$/;"	g
xdg_surface_events	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_surface_events[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_surface_get_popup	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_get_popup(struct xdg_surface *xdg_surface, struct xdg_surface *parent, struct xdg_po/;"	f	typeref:struct:xdg_popup *	signature:(struct xdg_surface * xdg_surface,struct xdg_surface * parent,struct xdg_positioner * positioner)
xdg_surface_get_toplevel	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_get_toplevel(struct xdg_surface *xdg_surface)$/;"	f	typeref:struct:xdg_toplevel *	signature:(struct xdg_surface * xdg_surface)
xdg_surface_get_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_get_user_data(struct xdg_surface *xdg_surface)$/;"	f	typeref:typename:void *	signature:(struct xdg_surface * xdg_surface)
xdg_surface_get_version	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_get_version(struct xdg_surface *xdg_surface)$/;"	f	typeref:typename:uint32_t	signature:(struct xdg_surface * xdg_surface)
xdg_surface_interface	build/protocol/xdg-shell-protocol.c	/^WL_PRIVATE const struct wl_interface xdg_surface_interface = {$/;"	v	typeref:typename:const struct wl_interface
xdg_surface_listener	build/protocol/xdg-shell-client-protocol.h	/^struct xdg_surface_listener {$/;"	s
xdg_surface_requests	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_surface_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_surface_set_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_set_user_data(struct xdg_surface *xdg_surface, void *user_data)$/;"	f	typeref:typename:void	signature:(struct xdg_surface * xdg_surface,void * user_data)
xdg_surface_set_window_geometry	build/protocol/xdg-shell-client-protocol.h	/^xdg_surface_set_window_geometry(struct xdg_surface *xdg_surface, int32_t x, int32_t y, int32_t w/;"	f	typeref:typename:void	signature:(struct xdg_surface * xdg_surface,int32_t x,int32_t y,int32_t width,int32_t height)
xdg_toplevel_add_listener	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_add_listener(struct xdg_toplevel *xdg_toplevel,$/;"	f	typeref:typename:int	signature:(struct xdg_toplevel * xdg_toplevel,const struct xdg_toplevel_listener * listener,void * data)
xdg_toplevel_destroy	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_destroy(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_error	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_toplevel_error {$/;"	g
xdg_toplevel_events	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_toplevel_events[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_toplevel_get_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_get_user_data(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:void *	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_get_version	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_get_version(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:uint32_t	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_interface	build/protocol/xdg-shell-protocol.c	/^WL_PRIVATE const struct wl_interface xdg_toplevel_interface = {$/;"	v	typeref:typename:const struct wl_interface
xdg_toplevel_listener	build/protocol/xdg-shell-client-protocol.h	/^struct xdg_toplevel_listener {$/;"	s
xdg_toplevel_move	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_move(struct xdg_toplevel *xdg_toplevel, struct wl_seat *seat, uint32_t serial)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,struct wl_seat * seat,uint32_t serial)
xdg_toplevel_requests	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_toplevel_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_toplevel_resize	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_resize(struct xdg_toplevel *xdg_toplevel, struct wl_seat *seat, uint32_t serial, ui/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,struct wl_seat * seat,uint32_t serial,uint32_t edges)
xdg_toplevel_resize_edge	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_toplevel_resize_edge {$/;"	g
xdg_toplevel_set_app_id	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_app_id(struct xdg_toplevel *xdg_toplevel, const char *app_id)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,const char * app_id)
xdg_toplevel_set_fullscreen	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_fullscreen(struct xdg_toplevel *xdg_toplevel, struct wl_output *output)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,struct wl_output * output)
xdg_toplevel_set_max_size	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_max_size(struct xdg_toplevel *xdg_toplevel, int32_t width, int32_t height)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,int32_t width,int32_t height)
xdg_toplevel_set_maximized	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_maximized(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_set_min_size	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_min_size(struct xdg_toplevel *xdg_toplevel, int32_t width, int32_t height)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,int32_t width,int32_t height)
xdg_toplevel_set_minimized	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_minimized(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_set_parent	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_parent(struct xdg_toplevel *xdg_toplevel, struct xdg_toplevel *parent)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,struct xdg_toplevel * parent)
xdg_toplevel_set_title	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_title(struct xdg_toplevel *xdg_toplevel, const char *title)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,const char * title)
xdg_toplevel_set_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_set_user_data(struct xdg_toplevel *xdg_toplevel, void *user_data)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,void * user_data)
xdg_toplevel_show_window_menu	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_show_window_menu(struct xdg_toplevel *xdg_toplevel, struct wl_seat *seat, uint32_t /;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel,struct wl_seat * seat,uint32_t serial,int32_t x,int32_t y)
xdg_toplevel_state	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_toplevel_state {$/;"	g
xdg_toplevel_unset_fullscreen	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_unset_fullscreen(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_unset_maximized	build/protocol/xdg-shell-client-protocol.h	/^xdg_toplevel_unset_maximized(struct xdg_toplevel *xdg_toplevel)$/;"	f	typeref:typename:void	signature:(struct xdg_toplevel * xdg_toplevel)
xdg_toplevel_wm_capabilities	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_toplevel_wm_capabilities {$/;"	g
xdg_wm_base_add_listener	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_add_listener(struct xdg_wm_base *xdg_wm_base,$/;"	f	typeref:typename:int	signature:(struct xdg_wm_base * xdg_wm_base,const struct xdg_wm_base_listener * listener,void * data)
xdg_wm_base_create_positioner	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_create_positioner(struct xdg_wm_base *xdg_wm_base)$/;"	f	typeref:struct:xdg_positioner *	signature:(struct xdg_wm_base * xdg_wm_base)
xdg_wm_base_destroy	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_destroy(struct xdg_wm_base *xdg_wm_base)$/;"	f	typeref:typename:void	signature:(struct xdg_wm_base * xdg_wm_base)
xdg_wm_base_error	build/protocol/xdg-shell-client-protocol.h	/^enum xdg_wm_base_error {$/;"	g
xdg_wm_base_events	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_wm_base_events[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_wm_base_get_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_get_user_data(struct xdg_wm_base *xdg_wm_base)$/;"	f	typeref:typename:void *	signature:(struct xdg_wm_base * xdg_wm_base)
xdg_wm_base_get_version	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_get_version(struct xdg_wm_base *xdg_wm_base)$/;"	f	typeref:typename:uint32_t	signature:(struct xdg_wm_base * xdg_wm_base)
xdg_wm_base_get_xdg_surface	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_get_xdg_surface(struct xdg_wm_base *xdg_wm_base, struct wl_surface *surface)$/;"	f	typeref:struct:xdg_surface *	signature:(struct xdg_wm_base * xdg_wm_base,struct wl_surface * surface)
xdg_wm_base_interface	build/protocol/xdg-shell-protocol.c	/^WL_PRIVATE const struct wl_interface xdg_wm_base_interface = {$/;"	v	typeref:typename:const struct wl_interface
xdg_wm_base_listener	build/protocol/xdg-shell-client-protocol.h	/^struct xdg_wm_base_listener {$/;"	s
xdg_wm_base_pong	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_pong(struct xdg_wm_base *xdg_wm_base, uint32_t serial)$/;"	f	typeref:typename:void	signature:(struct xdg_wm_base * xdg_wm_base,uint32_t serial)
xdg_wm_base_requests	build/protocol/xdg-shell-protocol.c	/^static const struct wl_message xdg_wm_base_requests[] = {$/;"	v	typeref:typename:const struct wl_message[]	file:
xdg_wm_base_set_user_data	build/protocol/xdg-shell-client-protocol.h	/^xdg_wm_base_set_user_data(struct xdg_wm_base *xdg_wm_base, void *user_data)$/;"	f	typeref:typename:void	signature:(struct xdg_wm_base * xdg_wm_base,void * user_data)
